<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File 
*************************************************	         
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="6.6.0.201105271707" AlpVersion="6.6.0">
<Model>
	<Id>1291972726904</Id>
	<Name><![CDATA[BB_Risk_Complex]]></Name>
	<ExcludeFromBuild>false</ExcludeFromBuild>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[supplychain_ComplexityVersion]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Minute]]></ModelTimeUnit>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291972726905</Id>
			<Name><![CDATA[Main]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Import><![CDATA[import java.io.*;
import jxl.*;
import java.util.*;
import jxl.Workbook;
import jxl.write.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.DateFormat;]]></Import>
			<StartupCode><![CDATA[ //initVariables();
// initVariables can be both active, so we always have an initialized model
DebugTrace.SetMain(this);
DebugTrace.SetClassCheckBoxes();
initColors();
loadParameters();
DebugTrace.SetAgentObjectsCheckBoxes();
// if (debugOn) stopSimulation();
//traceln("xxxx Initial Inventory " + agent.get(1).stock.getInventoryOf("Computer"));

//traceln("xxxx Initial BOM " + agent.get(1).listOfBOM.getBOMOfProduct("Computer"));
//stopSimulation();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1292253158261</Id>
					<Name><![CDATA[globalOrderID]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>860</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1298278956375</Id>
					<Name><![CDATA[excel_file_parameters]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>150</X><Y>-160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[String]]></Type>        
						<DefaultValue><![CDATA["Parameters_BB_big.xls"]]></DefaultValue>
						<ParameterEditor>
							<Id>1298278956373</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299054430245</Id>
					<Name><![CDATA[zoom_visualization]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>150</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[1]]></DefaultValue>
						<ParameterEditor>
							<Id>1299054430243</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299233833097</Id>
					<Name><![CDATA[guiOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>150</X><Y>-190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[true]]></DefaultValue>
						<ParameterEditor>
							<Id>1299233833080</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299233843627</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-140</X><Y>-220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[false]]></DefaultValue>
						<ParameterEditor>
							<Id>1299233843625</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1299087170666</Id>
					<Name><![CDATA[datasets]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>293</X><Y>-239</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[DataSet]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1299166401052</Id>
					<Name><![CDATA[datasetNames]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>-240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1299167691949</Id>
					<Name><![CDATA[colors]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>-200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Color]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Environments>
				<Environment>
					<Id>1297263607351</Id>
					<Name><![CDATA[Supply_Chain]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>710</X><Y>-60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<EnableSteps>false</EnableSteps>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[1300	]]></WidthCode>
					<HeightCode><![CDATA[1200]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>

				</Environment>
			</Environments>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1293447021384</Id>
					<Name><![CDATA[initVariables]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>-70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
// Demand
Demand_Agent d1 = add_demand();
d1.setXY(500, 300);
d1.inventoryManagement_Demand.demandProducts.add("Computer");
Demand_Agent d2 = add_demand();
d2.setXY(500, 100);

d2.inventoryManagement_Demand.demandProducts.add("Computer");
//demand.get(1).stock.add("Computer",1, "NotReserved");
//traceln(d2 + "::"+ demand.get(1) + "::" + demand.get(1).stock.getInventoryOf("Computer"));

// testen
//stopSimulation();

Transport_Agent t1 = add_transporter();
t1.setXY(150,150);


// Supplier 1
Generic_agent s1 = add_agent();
s1.setXY(100, 100);
BOM moni = new BOM();
moni.productName = "Monitor";
moni.input = "MonitorInput";
moni.quantity = 1;
s1.listOfBOM.add(moni);
s1.risk.recovery = 2;

PriceL p1 = new PriceL();
p1.name= "Monitor";
p1.price = 8;
s1.priceList.addPrice(p1);
PriceL pr1 = new PriceL();
pr1.name= "MonitorInput";
pr1.price = 5;
s1.priceList.addCost(pr1);

ProductionRate prate1 = new ProductionRate("Monitor", 1.0);
//s1.productionManagement.addInitialPC(prate1);

Ss_Policy monitorInput = new Ss_Policy("MonitorInput",200,0);
s1.inventoryManagement.add(monitorInput);
Ss_Policy _Mon = new Ss_Policy("Monitor",15,7);
s1.inventoryManagement.add(_Mon);

s1.stock.add("MonitorInput", 200, "NotReserved");
s1.stock.add("Monitor",15, "NotReserved");

// Supplier 2
Generic_agent s2 = add_agent();
s2.setXY(100, 300);
BOM _keyb = new BOM();
_keyb.productName = "Keyboard";
_keyb.input = "KeyboardInput";
_keyb.quantity = 1;
s2.listOfBOM.add(_keyb);
s2.risk.recovery = 2;

PriceL p2 = new PriceL();
p2.name= "Keyboard";
p2.price = 7;
s2.priceList.addPrice(p2);
PriceL _p2 = new PriceL();
_p2.name= "KeyboardInput";
_p2.price = 6;
s2.priceList.addCost(_p2);

ProductionRate pr2 = new ProductionRate("Keyboard",1.0);
//s2.productionManagement.addInitialPC(pr2);

Ss_Policy keyboardInput = new Ss_Policy("KeyboardInput", 200,0);
s2.inventoryManagement.add(keyboardInput);
Ss_Policy _Key = new Ss_Policy("Keyboard",10,5);
s2.inventoryManagement.add(_Key);

s2.stock.add("KeyboardInput",200, "NotReserved");
s2.stock.add("Keyboard",10, "NotReserved");

// Manufacturer
Generic_agent m = add_agent();
m.setXY(300, 200);
BOM _Comp1 = new BOM();
_Comp1.productName = "Computer";
_Comp1.input = "Monitor";
_Comp1.quantity = 1;
m.listOfBOM.add(_Comp1);
BOM _Comp2 = new BOM();
_Comp2.productName = "Computer";
_Comp2.input = "Keyboard";
_Comp2.quantity = 1;
m.listOfBOM.add(_Comp2);
traceln("BOM list size of COMPUTER is:  " + m.listOfBOM.BOMList.size());

m.stock.add("Computer", 15, "NotReserved");
m.stock.add("Keyboard", 0, "NotReserved");
m.stock.add("Monitor", 0, "NotReserved");

m.risk.uncertainty = 0.2;
m.risk.disruptions = 0.3;

PriceL p = new PriceL();
p.name= "Computer";
p.price = 16;
m.priceList.addPrice(p);

PriceL _monitor = new PriceL();
_monitor.name= "Monitor";
_monitor.price = 7;
m.priceList.addCost(_monitor);

PriceL _Kboard = new PriceL();
_Kboard.name= "Keyboard";
_Kboard.price = 6;
m.priceList.addCost(_Kboard);

Ss_Policy keyboard = new Ss_Policy("Keyboard", 8,5);
m.inventoryManagement.add(keyboard);
Ss_Policy monitor = new Ss_Policy("Monitor", 7,4);
m.inventoryManagement.add(monitor);
Ss_Policy computer = new Ss_Policy("Computer", 15,5);
m.inventoryManagement.add(computer);

ProductionRate pr3 = new ProductionRate("Computer", 1.0);
//m.productionManagement.addInitialPC(pr3);


//Supplier1.get_Main().remove_Generic_agent( this );

// Connections
d2.connectTo(m);
d1.connectTo(m);
m.connectTo(t1);
t1.connectTo(s1);
m.connectTo(s2);

for( AgentContinuous2D a : this.Supply_Chain.getAgentCollection() ) {
		traceln("*** NEW AGENTS: "  +a.getName()  );
		}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297090587188</Id>
					<Name><![CDATA[loadParameters]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[

String _excelFileName = excel_file_parameters;

if (debugOn) {
	traceln("----------------");
	traceln("Adding the necessary Agents");
}
excelFile.setFileName(_excelFileName);
excelFile.readFile();

ArrayList<String> invalidAgents = new ArrayList<String>();
invalidAgents.add("BOM");
invalidAgents.add("Coordinates");

int colorIndexInputs = 0;
int colorIndexOutputs = 0;

for (int i = 1; i <= excelFile.getNumberOfSheets(); i++ ){
	//traceln(i+"OK"+excelFile.getNumberOfSheets());
	String sheetName = excelFile.getSheetName(i);
	if (debugOn)
		traceln("Found " +sheetName);
	if (!invalidAgents.contains(sheetName)) {
		if (debugOn)
			traceln("Valid Agent");
		if (sheetName.startsWith("Demand")) {
			Demand_Agent a = add_demand();
			a.Name = sheetName;
			if (debugOn)
				traceln ("Reading parameters from " + _excelFileName + " file.");
			a.excelInterface.doReadDemand(_excelFileName, a);
			if (debugOn)
				traceln("Added Demand Agent " + a.Name);
		} else if (sheetName.startsWith("Transport")) {
			Transport_Agent a = add_transporter();
			a.Name = sheetName;
			if (debugOn)
				traceln ("Reading parameters from " + _excelFileName + " file.");
			a.excelInterface.doReadTransporter(_excelFileName, a);
			if (debugOn)
				traceln("Added Transport Agent " + a.Name);
		} else {
			Generic_agent a = add_agent();
			a.Name = sheetName;
			if (debugOn)
				traceln ("Reading parameters from " + _excelFileName + " file.");
			a.excelInterface.doReadGeneric(_excelFileName, a);

			for (String material: a.listOfBOM.getInputs()) {
			DataSet ds = new DataSet(1000);
				String dsName = a.Name + " : " + material;
				InventoryInputProducts.addDataSet(ds, dsName, colors.get(colorIndexInputs++), true, Chart2DPlot.INTERPOLATION_STEP, 1, Chart2DPlot.POINT_NONE);
				datasets.add(ds);
				datasetNames.add(dsName);
			}
			
			for (String material: a.listOfBOM.getOutputs()) {
				DataSet ds = new DataSet(1000);
				String dsName = a.Name + " : " + material;
				InventoryOutputProducts.addDataSet(ds, dsName, colors.get(colorIndexOutputs++), true, Chart2DPlot.INTERPOLATION_STEP, 1, Chart2DPlot.POINT_NONE);
				datasets.add(ds);
				datasetNames.add(dsName);
			}
			
			if (debugOn) {
				traceln("Current Stock Computer " + a.stock.getInventoryOf("Computer"));
				traceln("Added Generic Agent " + a.Name);
			}
		}
	}
	//traceln("Ende Run");
}


/*agent.get(0).risk.recovery = 2;
agent.get(1).risk.recovery = 2;
agent.get(2).risk.uncertainty = 0.2;
agent.get(2).risk.disruptions = 0.3;

*/

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1299167725465</Id>
					<Name><![CDATA[initColors]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[colors.add(Color.blue);
colors.add(Color.cyan);
colors.add(Color.green);
colors.add(Color.magenta);
colors.add(Color.orange);
colors.add(Color.pink);
colors.add(Color.red);
colors.add(Color.yellow);
colors.add(Color.lightGray);
colors.add(Color.magenta);
colors.add(Color.orange);
colors.add(Color.pink);
colors.add(Color.red);
colors.add(Color.yellow);
colors.add(Color.darkGray);
colors.add(Color.gray);
colors.add(Color.blue);
colors.add(Color.blue);
colors.add(Color.blue);
colors.add(Color.blue);
colors.add(Color.blue);
colors.add(Color.blue);
]]></Body>
				</Function>
			</Functions>
			<Connectivity>
				<ExcelFile>
					<Id>1297853605930</Id>
					<Name><![CDATA[excelFile]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<FileName>Parameters_BB.xls</FileName>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>false</LoadOnStartup>
					<SaveOnDispose>false</SaveOnDispose>
				</ExcelFile>
			</Connectivity>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1294329688832</Id>
					<Name><![CDATA[agent]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>680</X><Y>-160</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1297357617958</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Generic_agent]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[justOrdered]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
					</Parameters>
					<Replication><![CDATA[0]]></Replication>	
					<EnvironmentCode><![CDATA[Supply_Chain]]></EnvironmentCode>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297086126952</Id>
					<Name><![CDATA[transporter]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>560</X><Y>-160</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1297403552299</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Transport_Agent]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
					</Parameters>
					<Replication><![CDATA[0]]></Replication>	
					<EnvironmentCode><![CDATA[Supply_Chain]]></EnvironmentCode>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297263614678</Id>
					<Name><![CDATA[demand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>560</X><Y>-140</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1297263615896</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Demand_Agent]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<Replication><![CDATA[0]]></Replication>	
					<EnvironmentCode><![CDATA[Supply_Chain]]></EnvironmentCode>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1310981214740</Id>
					<Name><![CDATA[traceView]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>580</X><Y>-230</Y>
					<Label><X>-32</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[TraceView]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Shapes>
				<EmbeddedObjectPresentation>
					<Id>1297263615896</Id>
					<Name><![CDATA[demand_presentation]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<ReplicationCode><![CDATA[demand.size()]]></ReplicationCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1297357617958</Id>
					<Name><![CDATA[agent_presentation]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<ReplicationCode><![CDATA[agent.size()]]></ReplicationCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1297403552299</Id>
					<Name><![CDATA[transporter_Presentation]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<ReplicationCode><![CDATA[transporter.size()]]></ReplicationCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
				</EmbeddedObjectPresentation>
				<Image>
					<Id>1297775376680</Id>
					<Name><![CDATA[image]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2800</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Width>1288</Width>
					<Height>1600</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageFile><![CDATA[deutschlandkarte-gross.gif]]></ImageFile>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1298281966099</Id>
					<Name><![CDATA[text]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>530</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16776961</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA["Excel File parameters loaded: "]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1298282165148</Id>
					<Name><![CDATA[text1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>530</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[excel_file_parameters]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Shapes>
			<Controls>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1296738038438</Id>
					<Name><![CDATA[button]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>300</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="130" Height="20" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor>-16744448</FillColor>
						<TextColor>-16741493</TextColor>
						<ActionCode><![CDATA[traceln("----------------");
traceln("----------------");

// Getting date and time for the Filename

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
Date date = new Date();
traceln (dateFormat.format(date));

String _excelFileName = "BB_"+ dateFormat.format(date)+".xls";

// Creating Excel File 
try {
    File f;
	f=new File(_excelFileName);
	if(!f.exists()) {
    	f.createNewFile();
    }
    WorkbookSettings ws = new WorkbookSettings();
    ws.setLocale(new Locale("de", "DE"));
    WritableWorkbook workbook= Workbook.createWorkbook(new File(_excelFileName), ws);
    
	int i=1;
	for( AgentContinuous2D a : this.Supply_Chain.getAgentCollection() ) {
		String _BBworksheetName = "";
		if (a instanceof Generic_agent) {
			_BBworksheetName = ((Generic_agent)a).Name;
		} else if (a instanceof Demand_Agent) {
			_BBworksheetName = ((Demand_Agent)a).Name;
		} else if (a instanceof Transport_Agent) {
			_BBworksheetName = ((Transport_Agent)a).Name;
		}
		traceln("Creating Worksheet for: "   + _BBworksheetName );
		traceln (a.agentInfo());
		WritableSheet s = workbook.createSheet(_BBworksheetName,i);
		//Creating Balance sheet for each agent
	    traceln( "Creating Balance Sheet worksheet for : " + _BBworksheetName);
	    WritableSheet _s = workbook.createSheet(_BBworksheetName + "_BS",i);
		i++;
		
	}
	workbook.write();    
	workbook.close();  
}
catch (IOException e) {
	e.printStackTrace();
}
catch (WriteException e) {
	e.printStackTrace();
}
// Call local doSave function
for( AgentContinuous2D a : this.Supply_Chain.getAgentCollection() ) {
	if (a instanceof Generic_agent) {
		((Generic_agent)a).excelInterface.doSaveGeneric(_excelFileName, (Generic_agent)a);
	} else if (a instanceof Demand_Agent) {
		((Demand_Agent)a).excelInterface.doSaveDemand(_excelFileName, (Demand_Agent)a);
	} else if (a instanceof Transport_Agent) {
		((Transport_Agent)a).excelInterface.doSaveTransporter(_excelFileName, (Transport_Agent)a);
	}
}
stopSimulation();
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Verdana" Size="11" Style="1"/>
						<LabelText><![CDATA[Save To Excel]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1297775203626</Id>
					<Name><![CDATA[MapView]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>440</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="60" Height="20" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
						<TextColor/>
						<ActionCode><![CDATA[mapViewGermany.navigateTo();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Map]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1299054274492</Id>
					<Name><![CDATA[Zoom]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>140</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="120" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor>-8355712</FillColor>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[1]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[.5]]></MinValue>
						<MaxValue><![CDATA[1]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>zoom_visualization</Link>
					</ExtendedProperties>
				</Control>
			</Controls>
			<Charts>
    			<TimePlot>
					<Id>1294045551369</Id>
					<Name><![CDATA[InventoryInputProducts]]></Name>
					<Description><![CDATA[Input products - Raw Material - Incoming parts]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>520</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>520</Width>
					<Height>260</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>10</YOffset>
						<Width>460</Width>
						<Height>150</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>75</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1294045622587</Id>
					<Name><![CDATA[InventoryOutputProducts]]></Name>
					<Description><![CDATA[Final product - Out going parts]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>504</X><Y>510</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>500</Width>
					<Height>270</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>20</XOffset>
						<YOffset>20</YOffset>
						<Width>460</Width>
						<Height>150</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>75</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1294045678959</Id>
					<Name><![CDATA[InventoryDemand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>770</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>350</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>20</YOffset>
						<Width>290</Width>
						<Height>110</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>50</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1297444999049</Id>
					<Name><![CDATA[plot2]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>340</X><Y>760</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>670</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>20</YOffset>
						<Width>610</Width>
						<Height>140</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
			</Charts>
			<Areas>
				<Area>
					<Id>1297698077419</Id>
					<Name><![CDATA[mainView]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Title><![CDATA[Supply Chain View]]></Title>
					<Width>1200</Width>
					<Height>1000</Height>
					<AlignTo>TOP_LEFT</AlignTo>
					<Scaling>SHRINK_TO_HEIGHT</Scaling>
					<Zoom>1.0</Zoom>
				</Area>
				<Area>
					<Id>1297775359976</Id>
					<Name><![CDATA[mapViewGermany]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2800</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[Germany ]]></Title>
					<Width>1280</Width>
					<Height>1600</Height>
					<AlignTo>TOP_LEFT</AlignTo>
					<Scaling>SHRINK_TO_HEIGHT</Scaling>
					<Zoom>1.0</Zoom>
				</Area>
				<Area>
					<Id>1306176259333</Id>
					<Name><![CDATA[viewArea]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1400</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[Verification]]></Title>
					<Width>800</Width>
					<Height>600</Height>
					<AlignTo>TOP_LEFT</AlignTo>
					<Scaling>ZOOM_TO_FIT</Scaling>
					<Zoom>1.0</Zoom>
				</Area>
			</Areas>
		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291972973013</Id>
			<Name><![CDATA[Generic_agent]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<Agent>true</Agent>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<OnReceive><![CDATA[receiveCaller(msg);]]></OnReceive>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1297401934358</Id>
					<Name><![CDATA[Name]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1298308325374</Id>
					<Name><![CDATA[producing]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-190</X><Y>-90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1298378667474</Id>
					<Name><![CDATA[fully]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-190</X><Y>-60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299074020783</Id>
					<Name><![CDATA[partially]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-190</X><Y>-30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299075591785</Id>
					<Name><![CDATA[none]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-190</X><Y>-5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1299234468888</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>480</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299234468886</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1305893656804</Id>
					<Name><![CDATA[justOrdered]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>540</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[String]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1305893656802</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1293447932524</Id>
					<Name><![CDATA[eventManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>160</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout><![CDATA[1]]></Timeout>
						<Rate><![CDATA[1]]></Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1293447931694</OccurrenceDate>												
						<OccurrenceTime><![CDATA[0]]></OccurrenceTime>												
						<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
						<Action><![CDATA[doEvent(this);]]></Action>
					</Properties>
				</Event>
				<Event>
					<Id>1297437306457</Id>
					<Name><![CDATA[PriceChangeRate]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>160</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout><![CDATA[1]]></Timeout>
						<Rate><![CDATA[1]]></Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1297432686924</OccurrenceDate>												
						<OccurrenceTime><![CDATA[1]]></OccurrenceTime>												
						<RecurrenceCode><![CDATA[5]]></RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
						<Action><![CDATA[//this.priceList.generateNewPrice(this);
]]></Action>
					</Properties>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1294064641316</Id>
					<Name><![CDATA[receiveCaller]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>480</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[Object]]></Type>
					</Parameter>
					<Body><![CDATA[// Received an Order
if (msg instanceof Order) {
		receive.onReceiveOrder(this, (Order) msg);
		//traceln (this.Name + ": received order from: ");
		//traceln ((Order) msg);
}
// Ordered Materials
 else if (msg instanceof Shipment) {
	receiveShipment.onReceiveShipment(this, (Shipment) msg);
	//traceln (this.Name + ": received Shipment from " + (Shipment) msg);
} 
else if (msg instanceof Quote ) {
	if (debugOn) {
		trace("My Name " + Name + "; ");
		//Quote _msg= new Quote(this);
		traceln("Received Quote " + ((Quote)msg).toString());
	}
	if ((Name.equals(((Quote)msg).querier)) && (((Quote)msg).price != -1)){
		if (debugOn)
			traceln("Message with price quote for purchasing");
		purchasing.receiveQuotes(this,(Quote) msg);
	} else if ((!Name.equals(((Quote)msg).querier)) && (((Quote)msg).price == -1)){
		if (debugOn)
			traceln("Message for quoting price for sales");
		sales.quotePrice(this,(Quote) msg);
	}
} else {
	// No Destination found
	if (debugOn)
		traceln("This message type is none of my concerns");
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1295366138896</Id>
					<Name><![CDATA[doEvent]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[disconnectFromAll();
purchasing.quotePrices(_myAgent);
createNetwork();

// Blinking color of agent status 
fully= false;
none=false;
partially=false;
producing=false;

productionManagement.applyStrategy(_myAgent);
inventoryManagement.applyPolicy(_myAgent);

// Update Charts
for (String material: listOfBOM.getInputs()) {
	String dsName = this.Name + " : " + material;
	int foundIndex = -1;
	for (int i = 0; i < get_Main().datasetNames.size(); i++) {
		if (get_Main().datasetNames.get(i).equals(dsName)) {
			foundIndex = i;
			break;
		}
	}
	if (foundIndex != -1) {
		get_Main().datasets.get(foundIndex).add(time(), stock.getInventoryOf(material));
	}
}


for (String product: listOfBOM.getOutputs()) {
	String dsName = this.Name + " : " + product;
	int foundIndex = -1;
	for (int i = 0; i < get_Main().datasetNames.size(); i++) {
		if (get_Main().datasetNames.get(i).equals(dsName)) {
			foundIndex = i;
			break;
		}
	}
	if (foundIndex != -1) {
		get_Main().datasets.get(foundIndex).add(time(), stock.getInventoryOf(product));
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1298382508710</Id>
					<Name><![CDATA[totalOrdered]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1250</X><Y>-30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[double a = 0;
a = incOrdList.getALLTotalQtyOrdered(_myAgent);
return a; ]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305632961134</Id>
					<Name><![CDATA[doProcurement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[disconnectFromAll();
purchasing.quotePrices(_myAgent);
createNetwork();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297871808742</Id>
					<Name><![CDATA[createNetwork]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>480</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// This function has to be moved to the Generic Agent and called by Event
// Right now selection only by price
//this.disconnectFromAll();
if (debugOn)
	traceln("Start Connection Procedure for " + Name);
// search new connections and disconnect old ones

//ArrayList<String> tmp = new ArrayList<String>();

for (String material: listOfBOM.getInputs()) {
	for ( String agent_name : purchasing.getSuppliers(material)) {
	if (debugOn)
	traceln ("Producer: " + agent_name +" for sourcing: " + material + " to: " + Name );
			boolean foundTransporter = false;
			for( AgentContinuous2D a : get_Main().Supply_Chain.getAgentCollection() ) {
				if (a instanceof Transport_Agent) {
					Transport_Agent b = (Transport_Agent)a;
					if (b.association.equals(agent_name)) {
						this.connectTo(b);
						if (debugOn)
							traceln("Connecting: "+ Name + " to " + agent_name);
						foundTransporter = true;
						break;
					}
				}
			} 
			if (!foundTransporter) {
				for( AgentContinuous2D a : get_Main().Supply_Chain.getAgentCollection() ) {
					if (a instanceof Generic_agent) {
						Generic_agent b = (Generic_agent)a;
						if (b.Name.equals(agent_name)) {
							this.connectTo(b);
							if (debugOn)
								traceln("Connecting to " + agent_name);
							break;
							
						}
					}
				}
			}
		//}
	}	

}]]></Body>
				</Function>
			</Functions>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1291989883541</Id>
					<Name><![CDATA[receive]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>70</X><Y>120</Y>
					<Label><X>-24</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Receive]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1292248929096</Id>
					<Name><![CDATA[stock]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>220</X><Y>220</Y>
					<Label><X>-19</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Stock]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1292252048362</Id>
					<Name><![CDATA[delivery]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>300</X><Y>240</Y>
					<Label><X>-27</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1297866400930</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Delivery]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1292319053040</Id>
					<Name><![CDATA[incOrdList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>220</X><Y>120</Y>
					<Label><X>-35</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[IncOrdList]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1292936674541</Id>
					<Name><![CDATA[receiveShipment]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>150</X><Y>240</Y>
					<Label><X>-54</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ReceiveShipment]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1292939762432</Id>
					<Name><![CDATA[outOrdList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>220</X><Y>170</Y>
					<Label><X>-36</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[OutOrdList]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1293447879504</Id>
					<Name><![CDATA[listOfBOM]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>150</X><Y>190</Y>
					<Label><X>-33</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ListOfBOM]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1293447924666</Id>
					<Name><![CDATA[productionManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>300</X><Y>140</Y>
					<Label><X>-76</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ProductionManagement]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[_BB_PRparameter]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[_var_prod_cost]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[_IHC_Finish_product_cost_rate]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[_IHC_WIP_2_at_Production]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[_NoneDisruption]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1295245611835</Id>
					<Name><![CDATA[balanceSheet]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>300</X><Y>190</Y>
					<Label><X>-43</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[BalanceSheet]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1295863029781</Id>
					<Name><![CDATA[risk]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>70</X><Y>170</Y>
					<Label><X>-14</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Risk]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1296738165746</Id>
					<Name><![CDATA[excelInterface]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>120</Y>
					<Label><X>-44</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ExcelInterface]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297090711887</Id>
					<Name><![CDATA[priceList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>150</X><Y>140</Y>
					<Label><X>-29</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[PriceList]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[Margin]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[factor]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297093179644</Id>
					<Name><![CDATA[inventoryManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>70</X><Y>220</Y>
					<Label><X>-82</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[InventoryManagement]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297859484005</Id>
					<Name><![CDATA[purchasing]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>170</Y>
					<Label><X>-37</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Purchasing]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297864569492</Id>
					<Name><![CDATA[sales]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>220</Y>
					<Label><X>-17</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Sales]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Shapes>
				<Text>
					<Id>1297415308540</Id>
					<Name><![CDATA[text]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1680</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16776961</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[this.Name + " has been ordered so far "+ this.totalOrdered(this) + " products."]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<EmbeddedObjectPresentation>
					<Id>1297866400930</Id>
					<Name><![CDATA[delivery_Presentation]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
				</EmbeddedObjectPresentation>
				<Polyline>
					<Id>1299075646955</Id>
					<Name><![CDATA[_ps303]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2</X><Y>33</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[partially]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-256</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299075646957</Id>
					<Name><![CDATA[_ps304]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>12</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[partially]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-256</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299075646959</Id>
					<Name><![CDATA[_ps305]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>22</X><Y>23</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[partially]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-256</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Text>
					<Id>1299148523954</Id>
					<Name><![CDATA[text7]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>52</X><Y>57</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[value]]></Text>
					<TextCode><![CDATA[slider1.getValue()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1299149283626</Id>
					<Name><![CDATA[Price]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-30</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[this.justOrdered + " " + this.priceList.getPriceOf(justOrdered) + "€" 
//(int)this.priceList.newPrice +"€"]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1299162717020</Id>
					<Name><![CDATA[group]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>15</X><Y>14</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

				</Group>
				<Group>
					<Id>1299023033816</Id>
					<Name><![CDATA[group5]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2</X><Y>-5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<ScaleXCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleXCode>
					<ScaleYCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleYCode>

				</Group>
				<Polyline>
					<Id>1299075652924</Id>
					<Name><![CDATA[_ps306]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2</X><Y>33</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[none]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-65536</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299075652926</Id>
					<Name><![CDATA[_ps307]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>12</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[none]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-65536</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299075652928</Id>
					<Name><![CDATA[_ps308]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>22</X><Y>23</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[none]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-65536</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Line>
					<Id>1297358790186</Id>
					<Name><![CDATA[line]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2</X><Y>-5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<ReplicationCode><![CDATA[getConnectionsNumber()]]></ReplicationCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355840</LineColor>
					<LineColorCode><![CDATA[getConnectedAgent( index ).hashCode() > hashCode() ?new Color(113, 166, 89) : null]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>60</Dx>
					<DxCode><![CDATA[getConnectedAgent( index ).getX() - getX()]]></DxCode>
					<Dy>-40</Dy>
					<DyCode><![CDATA[getConnectedAgent( index ).getY() - getY()]]></DyCode>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1298284006585</Id>
					<Name><![CDATA[text1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-31</X><Y>-45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Prod. rate]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1298287188597</Id>
					<Name><![CDATA[text2]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>42</X><Y>-5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[incOrdList.order_Fullfilment_Ratio(this) + " % "]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1298451199010</Id>
					<Name><![CDATA[text4]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-28</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16776961</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[Name]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1299022563095</Id>
					<Name><![CDATA[group4]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>22</X><Y>-5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<ScaleXCode><![CDATA[.5]]></ScaleXCode>
					<ScaleYCode><![CDATA[.5]]></ScaleYCode>

				</Group>
				<Group>
					<Id>1296737404148</Id>
					<Name><![CDATA[factory]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2</X><Y>5</Y>
					<Label><X>25</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<OnClickCode><![CDATA[this.BB.navigateTo();]]></OnClickCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Shapes>
				<Polyline>
					<Id>1296737404163</Id>
					<Name><![CDATA[_ps287]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>38</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>1342177280</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>15</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>35</X><Y>-13</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>35</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>40</X><Y>-13</Y><Z>0</Z></Point>
					   <Point><X>45</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>40</X><Y>-18</Y><Z>0</Z></Point>
					   <Point><X>40</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-25</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1296737404165</Id>
					<Name><![CDATA[_ps288]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-40</X><Y>18</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-6737204</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1296737404167</Id>
					<Name><![CDATA[_ps289]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>30</X><Y>-2</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-2252579</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>5</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Curve ControlPoints="true">
					<Id>1296737404169</Id>
					<Name><![CDATA[_ps290]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>5</X><Y>-14</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-65536</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-21</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1296737404171</Id>
					<Name><![CDATA[_ps291]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>20</X><Y>-6</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-65536</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-21</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Polyline>
					<Id>1296737404179</Id>
					<Name><![CDATA[_ps292]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-10</X><Y>18</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-2252579</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-30</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>-15</X><Y>-28</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>-5</X><Y>-33</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-40</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-25</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1296737404181</Id>
					<Name><![CDATA[_ps293]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-10</X><Y>33</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-11861886</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>40</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>40</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-40</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-25</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1296737404183</Id>
					<Name><![CDATA[_ps294]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[!producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1296737404185</Id>
					<Name><![CDATA[_ps295]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>10</X><Y>23</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[!producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1296737404194</Id>
					<Name><![CDATA[_ps296]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>20</X><Y>18</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[!producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Curve ControlPoints="true">
					<Id>1296737404196</Id>
					<Name><![CDATA[_ps297]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>30</X><Y>-2</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-12187648</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>15</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>15</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>15</Y><Z>0</Z></Point>
					   <Point><X>-40</X><Y>35</Y><Z>0</Z></Point>
					   <Point><X>-40</X><Y>35</Y><Z>0</Z></Point>
					   <Point><X>-40</X><Y>35</Y><Z>0</Z></Point>
					   <Point><X>-70</X><Y>20</Y><Z>0</Z></Point>
					   <Point><X>-70</X><Y>20</Y><Z>0</Z></Point>
					   <Point><X>-70</X><Y>20</Y><Z>0</Z></Point>
					   <Point><X>-70</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>-70</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>-70</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>-60</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>-60</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>-60</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>-55</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>-55</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>-55</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>-50</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>-50</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>-50</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>-45</X><Y>-13</Y><Z>0</Z></Point>
					   <Point><X>-45</X><Y>-13</Y><Z>0</Z></Point>
					   <Point><X>-45</X><Y>-13</Y><Z>0</Z></Point>
					   <Point><X>-40</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>-40</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>-40</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>-35</X><Y>-18</Y><Z>0</Z></Point>
					   <Point><X>-35</X><Y>-18</Y><Z>0</Z></Point>
					   <Point><X>-35</X><Y>-18</Y><Z>0</Z></Point>
					   <Point><X>-35</X><Y>-33</Y><Z>0</Z></Point>
					   <Point><X>-35</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>-35</X><Y>-38</Y><Z>0</Z></Point>
					   <Point><X>-25</X><Y>-38</Y><Z>0</Z></Point>
					   <Point><X>-25</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>-25</X><Y>-33</Y><Z>0</Z></Point>
					   <Point><X>-25</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>-25</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>-25</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-9</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-9</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-9</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-25</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-28</Y><Z>0</Z></Point>
					   <Point><X>-20</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-28</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-25</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
			</Shapes>
				</Group>
				<Polyline>
					<Id>1298308803680</Id>
					<Name><![CDATA[_ps298]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>2</X><Y>33</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[fully]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16711936</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1298377930307</Id>
					<Name><![CDATA[_ps299]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>12</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[fully]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16711936</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1298377952834</Id>
					<Name><![CDATA[_ps300]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>22</X><Y>23</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[fully]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16711936</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Curve ControlPoints="true">
					<Id>1298378256149</Id>
					<Name><![CDATA[_ps301]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>22</X><Y>-1</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[!producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-21</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1298378298519</Id>
					<Name><![CDATA[_ps302]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>7</X><Y>-9</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[!producing]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-21</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>-10</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-26</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-24</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Text>
					<Id>1298283976978</Id>
					<Name><![CDATA[text3]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-31</X><Y>-1</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[value]]></Text>
					<TextCode><![CDATA[slider.getValue()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Shapes>
			<Controls>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1299079077201</Id>
					<Name><![CDATA[slider1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>40</X><Y>20</Y>
					<Label><X>0</X><Y>30</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="30" Height="40" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[1]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<MinValue><![CDATA[1]]></MinValue>
						<MaxValue><![CDATA[5]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>priceList.factor</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1297174100102</Id>
					<Name><![CDATA[slider]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-48</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="40" Height="21" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[1]]></MinValue>
						<MaxValue><![CDATA[2]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>productionManagement._BB_PRparameter</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1305642348589</Id>
					<Name><![CDATA[availability]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-56</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="60" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
						<TextColor/>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[On/Off]]></LabelText>
						<LinkTo>true</LinkTo>
						<Link>productionManagement._NoneDisruption</Link>
	 				</ExtendedProperties>
				</Control>
			</Controls>
			<Charts>
    			<TimePlot>
					<Id>1297414832455</Id>
					<Name><![CDATA[Cumulated_Transaction_Values]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1770</X><Y>80</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>450</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>20</YOffset>
						<Width>390</Width>
						<Height>170</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-65536</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>80</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-16777088</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DatasetExpression>  
						<Title><![CDATA[Production cost]]></Title>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-29696</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("Production cost")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Sale]]></Title>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-12799119</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("Sale")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Raw Material]]></Title>
					<Expression><![CDATA[my_dataset2]]></Expression>
					<Color>-9807155</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("IHC Raw Material")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Work in Progress 1]]></Title>
					<Expression><![CDATA[my_dataset3]]></Expression>
					<Color>-2987746</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("IHC Work in Progress 1")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Work in Progress 2]]></Title>
					<Expression><![CDATA[my_dataset4]]></Expression>
					<Color>-2448096</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("IHC Work in Progress 2")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Finished Products]]></Title>
					<Expression><![CDATA[my_dataset5]]></Expression>
					<Color>-9728477</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("IHC Finished Products")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Material Paid]]></Title>
					<Expression><![CDATA[my_dataset7]]></Expression>
					<Color>-4565549</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("Material Paid")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1297676071599</Id>
					<Name><![CDATA[Average_Transaction_Values]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1290</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>390</Width>
					<Height>270</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>20</YOffset>
						<Width>330</Width>
						<Height>150</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-65536</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>80</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-16777088</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DatasetExpression>  
						<Title><![CDATA[Production cost]]></Title>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-29696</Color>
					<Expression2><![CDATA[balanceSheet.average("Production cost")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Sale]]></Title>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-12799119</Color>
					<Expression2><![CDATA[balanceSheet.average("Sale")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Raw Material]]></Title>
					<Expression><![CDATA[my_dataset2]]></Expression>
					<Color>-9807155</Color>
					<Expression2><![CDATA[balanceSheet.average("IHC Raw Material")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Work in Progress 1]]></Title>
					<Expression><![CDATA[my_dataset3]]></Expression>
					<Color>-2987746</Color>
					<Expression2><![CDATA[balanceSheet.average("IHC Work in Progress 1")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Work in Progress 2]]></Title>
					<Expression><![CDATA[my_dataset4]]></Expression>
					<Color>-2448096</Color>
					<Expression2><![CDATA[balanceSheet.average("IHC Work in Progress 2")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[IHC Finished Products]]></Title>
					<Expression><![CDATA[my_dataset5]]></Expression>
					<Color>-9728477</Color>
					<Expression2><![CDATA[balanceSheet.average("IHC Finished Products")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Material Paid]]></Title>
					<Expression><![CDATA[my_dataset7]]></Expression>
					<Color>-4565549</Color>
					<Expression2><![CDATA[balanceSheet.average("Material Paid")]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
    			<PieChart>
					<Id>1298291183216</Id>
					<Name><![CDATA[Order_Fullfilment]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1750</X><Y>390</Y>
					<Label><X>-10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>260</Width>
					<Height>290</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>20</XOffset>
						<YOffset>10</YOffset>
						<Width>220</Width>
						<Height>210</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor/>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Expression><![CDATA[incOrdList.getALLFullSatisfiedQty(this)]]></Expression>
					<Color>-16744448</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Fully Delivered]]></Title>
					</DataItem>
					<DataItem>
					<Expression><![CDATA[incOrdList.getALLFullyUnsatisfiedQty(this)]]></Expression>
					<Color>-65536</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[None Delivered]]></Title>
					</DataItem>
					<DataItem>
					<Expression><![CDATA[incOrdList.getALLPartiallySatisfiedQty(this)]]></Expression>
					<Color>-10496</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Partially Delivered]]></Title>
					</DataItem>
    			</PieChart>
    			<TimePlot>
					<Id>1298307357478</Id>
					<Name><![CDATA[plot]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1480</X><Y>390</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>560</Width>
					<Height>300</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>20</YOffset>
						<Width>500</Width>
						<Height>230</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<Persistent>true</Persistent>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DatasetExpression>  
						<Title><![CDATA[Net cash flow ( Balance )]]></Title>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-14774017</Color>
					<Expression2><![CDATA[balanceSheet.getBalanceByCategory("Sale")+(balanceSheet.getBalance()-balanceSheet.getBalanceByCategory("Sale"))]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<DrawLine>true</DrawLine>
						<LineWidth>1</LineWidth>
						<Interpolation>LINEAR</Interpolation>
					</DatasetExpression>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<CustomLabelFormat><![CDATA[dd.MM.yyyy HH:mm:ss]]></CustomLabelFormat>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
			</Charts>
			<Areas>
				<Area>
					<Id>1297414573879</Id>
					<Name><![CDATA[BB]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-1800</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[BuildingBlock]]></Title>
					<Width>940</Width>
					<Height>720</Height>
					<AlignTo>TOP_LEFT</AlignTo>
					<Scaling>SHRINK_TO_FIT</Scaling>
					<Zoom>1.0</Zoom>
				</Area>
			</Areas>
		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291973121297</Id>
			<Name><![CDATA[IncOrdList]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236837816</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>-20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236837814</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1291973248592</Id>
					<Name><![CDATA[OrderList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Order]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1291973249928</Id>
					<Name><![CDATA[StatusInfo]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Status]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1298300497190</Id>
					<Name><![CDATA[Qty_ordered]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>160</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1298300845148</Id>
					<Name><![CDATA[OrderID_Received]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>130</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1291973476440</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_order]]></Name>
						<Type><![CDATA[Order]]></Type>
					</Parameter>
					<Body><![CDATA[//Adding orders to the list 
//1- Take the order 
//2- add it to the order list
this.OrderList.add(_order);
this.OrderID_Received.add(_order.orderID);
this.Qty_ordered.add(_order.quantity);
//3- assign the receive status 
this.statusChange(_order.orderID,_order.quantity, "Recieved", time());
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1291976286590</Id>
					<Name><![CDATA[getIndexOfStatus]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[// get Index within StatusInfo of a specified orderID
//

int found = -1;

for (int i=0; i < StatusInfo.size(); i++) {
	if (StatusInfo.get(i).orderID == _orderID) {
		found = i;
		break;
	}	
}
return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Order]]></ReturnType>
					<Id>1291986749004</Id>
					<Name><![CDATA[getOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[Order found = null;
for (Order o: OrderList) {
	if (o.orderID == _orderID) {
		found = o;
		break;
	}
}

return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Status]]></ReturnType>
					<Id>1291986975589</Id>
					<Name><![CDATA[getStatus]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>-30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[Status found = null;
for (Status s: StatusInfo) {
	if (s.orderID == _orderID) {
		found = s;
		break;
	}
}
return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1291987287658</Id>
					<Name><![CDATA[getOldestOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int found = -1;

double earliest_time = 99999999;

for (int i=0; i < StatusInfo.size(); i++) {
	if ((StatusInfo.get(i).recTime < earliest_time) && (StatusInfo.get(i).status != "done")) {
		earliest_time = StatusInfo.get(i).recTime;
		found = i;
	}
}
return StatusInfo.get(found).orderID;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1292252137484</Id>
					<Name><![CDATA[statusChange]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_time]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//Save status of the orders
// Get position of existing element
int position = getIndexOfStatus(_orderID);
// if the element does not exist, position will be -1
if (position == -1) {
	Status s = new Status(_orderID,_quantity, _status, time());
	StatusInfo.add(s);	
} else {
	StatusInfo.get(position).status = _status;
}
	



]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Order]]></ReturnType>
					<Id>1294332314350</Id>
					<Name><![CDATA[getAllOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_index]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[return OrderList.get(_index);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1294332508458</Id>
					<Name><![CDATA[getNumberAllOrders]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return OrderList.size();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297680092217</Id>
					<Name><![CDATA[getQtyByStatus]]></Name>
					<Description><![CDATA[This does not gives the total original amount of the ordered quantity, whihc is registered inteh original orderList]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double sum = 0.0;
for (Order o: OrderList){
	if (o.productName.equals(_product)){
		int _order= o.orderID;
		for (Status s: StatusInfo){
			if (s.orderID == _order && s.status.equals(_status)){
			sum = s.quantity + sum;
			}
		}	
	}
}
//traceln("Total quantity  of: " + _product +" : " +_status + " is: "+ sum  );
return sum;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297685755473</Id>
					<Name><![CDATA[getTotalOrderedByProduct]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>-90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double sum =0;
int _orderID = 0;
for (Order o: OrderList) {
	if (_product.equals(o.productName)){
		_orderID=o.orderID;
		for (int i=0; i< OrderID_Received.size();i++){
			if (OrderID_Received.get(i)== _orderID) {
				sum = Qty_ordered.get(i)+sum;
			}
		}
	}
}
//traceln("Total quantity  of: "+ _product + " :Ordered:" + sum); 
return sum;	
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1298285769743</Id>
					<Name><![CDATA[order_Fullfilment_Ratio]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[double fullfillment_ratio = 0;

fullfillment_ratio = 100*(getALLFullSatisfiedQty(_myAgent) + getALLPartiallySatisfiedQty(_myAgent))/getALLTotalQtyOrdered(_myAgent);

 int i = (int)fullfillment_ratio;
return i;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1298291284527</Id>
					<Name><![CDATA[getALLTotalQtyOrdered]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>-20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[double ordered = 0;
for (String product: _myAgent.listOfBOM.getOutputs()){
	ordered = getTotalOrderedByProduct(product)+ ordered;
}
return ordered;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1298291287959</Id>
					<Name><![CDATA[getALLFullyUnsatisfiedQty]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[String noneDelivered = "NoDeliveryScheduled";
double n = 0;

for (String product: _myAgent.listOfBOM.getOutputs()){
n =getQtyByStatus(product,noneDelivered)+n;
}



return n;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1298293003380</Id>
					<Name><![CDATA[getALLPartiallyUnsatisfiedQty]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[String noneDelivered = "NoDeliveryScheduled";
String partialDelivered = "PartialDeliveryScheduled";
String fullyDelivered = "FullDeliveryScheduled";
double p =0 ;
double f =0;
double n =0;
double t = 0;

for (String product: _myAgent.listOfBOM.getOutputs()){
	t =getTotalOrderedByProduct(product)+ t;
	p =getQtyByStatus(product,partialDelivered)+p;
	f =getQtyByStatus(product,fullyDelivered)+f;
	n =getQtyByStatus(product,noneDelivered)+n;
}

double partially= t -( p + f + n);

return partially;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1298295004283</Id>
					<Name><![CDATA[getALLFullSatisfiedQty]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[
String fullyDelivered = "FullDeliveryScheduled";
double f =0;

for (String product: _myAgent.listOfBOM.getOutputs()){
f =getQtyByStatus(product,fullyDelivered)+ f;
}
return f;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1298295736258</Id>
					<Name><![CDATA[getALLPartiallySatisfiedQty]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[String partialDelivered = "PartialDeliveryScheduled";
double p =0 ;

for (String product: _myAgent.listOfBOM.getOutputs()){
p =getQtyByStatus(product,partialDelivered)+p;
}
return p;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1305993904069</Id>
					<Name><![CDATA[getLastOrderedByProduct]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>-160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int _oldestIndex = -1;
int _order =0;
for (int i=0; i< OrderList.size();i++){
	_order = OrderList.get(i).orderID; 	
	Order o = getOrder(_order); 
	if (_product.equals(o.productName)) {
		if (o.orderID > _oldestIndex ) {
			_oldestIndex = o.orderID;
		}	
	}
}

return _oldestIndex;	

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1305993926752</Id>
					<Name><![CDATA[getPrevioustoLastOrderedByProduct]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int _oldestIndex = getLastOrderedByProduct(_product);
int _previousOldestIndex = -1;
int _order =-1;

for (int i=0; i< OrderList.size();i++){
	_order = OrderList.get(i).orderID; 	
	Order o = getOrder(_order); 
	if (_oldestIndex != o.orderID){
		if (_product.equals(o.productName)) {
			if (o.orderID < _oldestIndex ) {
				_previousOldestIndex = o.orderID;
			}	
		}
	}
}

return _previousOldestIndex;	
]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291989392927</Id>
			<Name><![CDATA[Receive]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236646310</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>460</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236646308</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1291989751119</Id>
					<Name><![CDATA[onReceiveOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>470</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_order]]></Name>
						<Type><![CDATA[Order]]></Type>
					</Parameter>
					<Body><![CDATA[String BBName = _myAgent.Name;
//traceln(BBName +": received order for: " + _order.productName );
//traceln (BBName+ " es igual ? " + _order.recipient);
if ((_order.recipient).equals(BBName)){
	if (debugOn)
		traceln("--- Start Receive " + _myAgent.Name);
	if (_myAgent.listOfBOM.iProduce(_order.productName)){
		// Add order to incoming order list only if it could be quoted as a output product
		_myAgent.justOrdered = _order.productName;
		_myAgent.incOrdList.add(_order);
		double qtForDel = 0.0;
		// check finished inventory levels
		//this.addTotal(_order.productName,_order.quantity);
		if (_order.quantity <= _myAgent.stock.getInventory(_order.productName, time(), "NotReserved")) {
			qtForDel = _order.quantity;
			_myAgent.incOrdList.statusChange(_order.orderID,qtForDel, "FullDeliveryScheduled", time());
			_myAgent.fully=true;
			
		} else if (Math.floor(_myAgent.stock.getInventory(_order.productName, time(), "NotReserved")) > 0) {
			qtForDel = _myAgent.stock.getInventory(_order.productName, time(), "NotReserved");
			_myAgent.incOrdList.statusChange(_order.orderID, qtForDel, "PartialDeliveryScheduled" , time());
			//_myAgent.incOrdList.statusChange(_order.orderID,  "PartialDeliveryScheduled" + Double.toString(_order.quantity - _myAgent.stock.getInventory(_order.productName, time(), "NotReserved")), time());
			_myAgent.partially=true;
		} else {
			//_myAgent.incOrdList.statusChange(_order.orderID, _order.quantity, "NoDeliveryScheduled:" , time());
			//this.addsatisfied(_order.productName,_order.quantity*-1);
			if (debugOn)
				traceln("Not avalilable in Stock - cannot deliver " + _order.orderID);
			_myAgent.none=true;
		}
		if (qtForDel > 0.0) {
			if (debugOn)
				traceln("From receive call delivery");
			_myAgent.delivery.deliver(_myAgent, _order.orderID, qtForDel);
			//this.addsatisfied(_order.productName,_order.quantity - _myAgent.stock.getInventory(_order.productName, time(), "NotReserved"));
		} else {
			_myAgent.incOrdList.statusChange(_order.orderID, _order.quantity, "NoDeliveryScheduled" , time());
			_myAgent.delivery.deliver(_myAgent, _order.orderID, 0);
		}
	}else {
	if (debugOn)
		traceln( "*** " + this.getFullName().toString().substring(5)+ " cant quote: " + _order.productName + "because it does not produce it");
	}
}
else{
if (debugOn)
		traceln( "The order not for me");
}	
// discriminate three cases: no inventory, not sufficient inventory, enough inventory. 
// Enough inventory, not sufficient inventory: kick off delivery by calling Object Delivery.deliver with orderID and number of Products
// No inventory: Mark order as completed and do nothing (no order backlog)
]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291989420589</Id>
			<Name><![CDATA[OutOrdList]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236899189</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>700</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236899187</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1292940025624</Id>
					<Name><![CDATA[OrderList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>610</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Order]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1292940025626</Id>
					<Name><![CDATA[StatusInfo]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>720</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Status]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1292939841423</Id>
					<Name><![CDATA[statusChange]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>870</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_time]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//Save status of the orders
// Get position of existing element
int position = getIndexOfStatus(_orderID);
// if the element does not exist, position will be -1
if (position == -1) {
	Status s = new Status(_orderID,_quantity, _status, _time);
	StatusInfo.add(s);	
} else {
	StatusInfo.get(position).status = _status;
	
}
	



]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1292940035551</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>870</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_order]]></Name>
						<Type><![CDATA[Order]]></Type>
					</Parameter>
					<Body><![CDATA[//Adding orders to the list 
//1- Take the order 
//2- add it to the order list
this.OrderList.add(_order);
//3- assign the receive status 
this.statusChange(_order.orderID,_order.quantity, "Order Send", time());
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1292940035558</Id>
					<Name><![CDATA[getIndexOfStatus]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1150</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[// get Index within StatusInfo of a specified orderID
//

int found = -1;

for (int i=0; i < StatusInfo.size(); i++) {
	if (StatusInfo.get(i).orderID == _orderID) {
		found = i;
		break;
	}	
}
return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1292940035560</Id>
					<Name><![CDATA[getOldestOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>870</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int found = -1;

double earliest_time = 99999999;

for (int i=0; i < StatusInfo.size(); i++) {
	if ((StatusInfo.get(i).recTime < earliest_time) && (StatusInfo.get(i).status != "done")) {
		earliest_time = StatusInfo.get(i).recTime;
		found = i;
	}
}
return StatusInfo.get(found).orderID;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Order]]></ReturnType>
					<Id>1292940035562</Id>
					<Name><![CDATA[getOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>870</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[Order found = null;
for (Order o: OrderList) {
	if (o.orderID == _orderID) {
		found = o;
		break;
	}
}

return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Order]]></ReturnType>
					<Id>1292940035564</Id>
					<Name><![CDATA[getOrderByID]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>870</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[return null;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Status]]></ReturnType>
					<Id>1292940035566</Id>
					<Name><![CDATA[getStatus]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>870</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[Status found = null;
for (Status s: StatusInfo) {
	if (s.orderID == _orderID) {
		found = s;
		break;
	}
}
return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Order]]></ReturnType>
					<Id>1295860755180</Id>
					<Name><![CDATA[getAllOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>900</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_index]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[return OrderList.get(_index);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1295860763865</Id>
					<Name><![CDATA[getNumberAllOrders]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>733</X><Y>431</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return OrderList.size();]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291989550737</Id>
			<Name><![CDATA[Stock]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299235246956</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299235246954</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1292842116179</Id>
					<Name><![CDATA[stockData]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[StockItem]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1291990990331</Id>
					<Name><![CDATA[getInventory]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_time]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn) {
	trace("getInventory ");
	trace("name = " + _name + " time = " + _time + " status = " + _status + "; ");
}
double currentStock = 0.0;
double latestTime = -0.01;
//for (int i = 0; i< stockData.size(); i++) {
for (StockItem s: stockData) {
	//traceln(s);
	//traceln(latestTime);
	if ((s.productName.equals(_name)) && (s.status.equals(_status)) && (s.time > latestTime) && (s.time < _time + 1)) {
		//traceln("Found");
		latestTime = s.time;
		currentStock = s.quantity;
	}
}
if (currentStock<0){
	traceln ( "Error  : the Current stock of: " + _name + " with Status : " + _status + " is negative; ");
}
if (debugOn)
	traceln("latestTime = " + latestTime + " currentStock = " + currentStock);
return currentStock;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1292841682910</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	trace("--- Start Add Stock: ");
boolean found = false;
double oldStock = 0.0;
double latestTime = -0.01;
if (debugOn)
	trace("Adding " + _quantity + "; ");
for (StockItem s: stockData) {
	//traceln("Parameter Name " + _name);
	//traceln(s);
	if ((s.productName.equals(_name)) && (s.status.equals(_status)) && (latestTime < s.time)) {
		latestTime = s.time;
		//traceln("latestTime = " + latestTime + " time = " + time());
		oldStock = s.quantity;
	}
}
double mytime = time();
if (latestTime >= mytime) {
	mytime = latestTime + 0.01;
	if (debugOn)
		trace("Same Timestamp. Adding 0.01, new time "+ mytime + "; ");
}	
StockItem newStock = new StockItem(_name, _quantity + oldStock, mytime, _status);
if (debugOn)
	traceln(newStock);
stockData.add(newStock);
//traceln("--- End Add Stock");]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1292842789354</Id>
					<Name><![CDATA[remove]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	trace("---- Start Remove: ");
boolean success = false;
double currentStock = getInventory(_name, time(), _status);
if (debugOn) {
	trace("currentLevel = " + currentStock + "; ");
	traceln("_quantity = " + _quantity + "; ");
}
if (currentStock >= _quantity) {
	this.add(_name, -_quantity, _status);
	success = true;
}
//traceln("--- End Remove");
return success;
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1294045834864</Id>
					<Name><![CDATA[getInventoryOf]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[return this.getInventory(_name, time(), "NotReserved");
]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291989591646</Id>
			<Name><![CDATA[BalanceSheet]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299234367548</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299234367546</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1295244366598</Id>
					<Name><![CDATA[Account]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Money]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1295244584738</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_category]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_item]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_value]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	trace("--- Start Balance Sheet Add: ");
Money m = new Money();
m.Category = _category;
m.Item = _item;
m.Time = time();
m.Value = _value;
if (debugOn)
	traceln(m.toString());
Account.add(m);
//traceln("--- End Balance Sheet Add");

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1295244752874</Id>
					<Name><![CDATA[getBalance]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double sum = 0.0;
for (Money m: Account) {
		sum = sum + m.Value;
	}
//traceln ( "The net balance is: " + sum + " at time: " +time());
return sum;


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1295244767536</Id>
					<Name><![CDATA[getBalanceByCategory]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_category]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[
double sum = 0.0;
for (Money m: Account) {
	if (m.Category.equals(_category)) {
		sum = sum + m.Value;
	}
}
return sum;

/*
traceln("getBalance of :");
traceln("Status = " + _category + " time = " + _time);
double currentBalance = 0.0;
double latestBalanceTime = -0.01;
for (Money b: Account) {
	if ((b.Category .equals(_category))&& (b.Time > latestBalanceTime) && (b.Time < _time + 1)) {
		/// traceln("Found");
		latestBalanceTime = b.Time;
		currentBalance = b.Value;
	}
}
traceln("Balance of: " + _category +" , LatestTime = " + latestBalanceTime + " currentBalance = " + currentBalance);
return currentBalance; 
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1297162295754</Id>
					<Name><![CDATA[getNumberAllBS]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return Account.size();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[Money]]></ReturnType>
					<Id>1297162302397</Id>
					<Name><![CDATA[getAllBS]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_index]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[return Account.get(_index);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297674050080</Id>
					<Name><![CDATA[average]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_category]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double sum = 0;
double result = 0;
int i =0;
for (Money a: Account) {
	if (_category.equals(a.Category) ){
		operations.add( i, a.Value);
		sum = sum + a.Value;
		i++;
	}
}
//result = sum / time();
if (result< 0){
result =0; 
}
result = sum / operations.size();
double max = operations.getYMax();
double min = operations.getYMin();
if (debugOn)
	traceln ( "The average of: " + _category + " at time: " + time() + " is: " + result + " with Max: " + max + " and Min: " + min);
operations.reset();
return result;

]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1297675430017</Id>
					<Name><![CDATA[operations]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<SamplesToKeep>100</SamplesToKeep>
				</DataSet>
			</AnalysisData>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291989613925</Id>
			<Name><![CDATA[InventoryManagement]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299235011491</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299235011489</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297091761016</Id>
					<Name><![CDATA[SsParameters]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>40</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Ss_Policy]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305981756041</Id>
					<Name><![CDATA[InventoryPolicies]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-150</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Policy]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1292244955580</Id>
					<Name><![CDATA[doInventory_sS]]></Name>
					<Description><![CDATA[S is the maximum limit based on constrints capacity of possibly the warehouse]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_input]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[//boolean debugOn= true;
// Inventory Management according to the s,S policy
// only responsible for raw material
// inventory steps therein include:
// for each raw material used:
// check inventory level,
// if below threshold s order up to level S.
// Keep track of orders in Outgoing order list
if (debugOn)
	traceln("--- Start Inventory Ss " + _myAgent.Name + " for input" + _input);
//for (String material: _myAgent.listOfBOM.getInputs()) {
	double _S= getUpperLevel(_input);
	double _s= getLowerLevel(_input);
//	double yesterday = time() - 1;
	if (debugOn) {
//		traceln("Gestern: " + yesterday);
		traceln("Heute: " + time());
		traceln("material " + _input);
	}
	double inventory = _myAgent.stock.getInventory(_input, time(), "NotReserved");
//	double last_inventory;
//	if (yesterday < 0.0) {
//		last_inventory = _S;
		//PriceL p= new PriceL(material,0.0);
		//_myAgent.priceList.add(p);
//	} else {
//		last_inventory = _myAgent.stock.getInventory(_input, yesterday, "NotReserved");
//	}	
	if (debugOn) {
//		traceln("last_inventory " + last_inventory + " inventory " + inventory);
		traceln("inventory " + inventory);
		traceln("s = "+ _s);
	}
	// Only until we have backlogs; Problem: if too little is supplied, you never reach s
	// and never again reach S
//	last_inventory = _S;
	double orderQuantity = 0;
//	if ((last_inventory > _s) && (inventory <= _s)) {
	if (inventory <= _s) {
		orderQuantity = (_S - inventory); 
		if (debugOn)
			traceln("Reorder Point reached");
		
		// PROCUREMENT SHOULD BE CALL TO DEFINE THE POLICY FOR SLIPPITTING QUANTITIES OR ANY OTHER RULE
		
	//traceln ( _myAgent + " " + _input + " " + orderQuantity);
//	_myAgent.purchasing.applyPolicy(_myAgent,_input, orderQuantity);	
		
		/*Order o = new Order(_myAgent);
		o.productName = material;
		o.quantity = (int) orderQuantity;
		 if (debugOn)
			traceln("Sende Order");
		_myAgent.outOrdList.add(o);		
		if (debugOn) {
			traceln(o);
			traceln("Connection Number "+ _myAgent.getConnectionsNumber());
		}
		_myAgent.send(o, AgentContinuous2D.ALL_CONNECTED);
	   	*/
	}
	// Calculate inventory holding cost and add to Balancesheet
	// here is a % of the actual Price/cost of Input/output existance in inventory.
	//_myAgent.balanceSheet.add("IHC Raw Material", material, _myAgent.stock.getInventoryOf(material) * -_myagent.priceList.getPriceOf(material));
	//_myAgent.balanceSheet.add("IHC Work in Progress", material, _myAgent.stock.getInventoryOf(material) * -_myagent.priceList.getPriceOf(material));
	_myAgent.balanceSheet.add("IHC Raw Material", _input, _myAgent.stock.getInventory(_input, time(), "NotReserved") * _myAgent.priceList.getCostOf(_input)*-0.01);
	_myAgent.balanceSheet.add("IHC Work in Progress 1", _input, _myAgent.stock.getInventory(_input, time(), "Reserved") * _myAgent.priceList.getCostOf(_input)*-0.015);
//}
if (debugOn)
	traceln("--- End Inventory Ss of: "+ _input + " from: "+ _myAgent.Name);
return (int) orderQuantity;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297090065323</Id>
					<Name><![CDATA[getUpperLevel]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>80</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double gS = 0.0;
for (Ss_Policy upper: SsParameters) {
	if (_product.equals(upper.productName)){
		gS = upper.S;
		//traceln("We found upper" + gS);
		break;
	}
}
if (debugOn)
	traceln("upper S level " + gS);
return gS;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297090065325</Id>
					<Name><![CDATA[getLowerLevel]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>80</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double gs = 0.0;
for (Ss_Policy lower: SsParameters) {
	if (_product.equals(lower.productName)){
		gs = lower.s;
		break;
	}
}
if (debugOn)
	traceln("lower s level " + gs);
return gs;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297090130332</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>80</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[Ss_Policy]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("--- Start Add new Ss");
//Ss_Policie _Ss = new Ss_Policie(_product.productName,_product.S,_product.s);
this.SsParameters.add(_product);
if (debugOn)
	traceln("Added new inventory parameters of " + _product);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1305981756046</Id>
					<Name><![CDATA[doMovingAverage]]></Name>
					<Description><![CDATA[S is just the initial inventory not updated at all just used as reference to initialize
]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_input]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double _toOrder = 0.0;
//Identify if it is INPUT - accumulates for all product 
// if OUTPUT just for the specific product
//traceln (" doing Moving Average of :" + _input);
double movAvgReq = _myAgent.listOfBOM.getTotalAvgReqPerInput(_myAgent,_input);
//traceln (" recomendend to order at time : " + time ()+ " " + movAvgReq);
double currentStock = _myAgent.stock.getInventoryOf(_input);
//traceln( "Current stock:" + currentStock );
if (movAvgReq >= currentStock){
_toOrder = (movAvgReq - currentStock);
//traceln ( "pedir a compras:" + _toOrder );
//_myAgent.purchasing.applyPolicy(_myAgent,_input, _toOrder);		
}
// If it has a residual then in meants giveas as output at least one 
if (_toOrder == 0.5){
_toOrder = 1.0;
}  
return (int) _toOrder ;
// No order needed
//traceln ( "no pedir nada ya que: "+ movAvgReq + " >= "+ currentStock );

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305981756049</Id>
					<Name><![CDATA[applyPolicy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-140</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[for (String _input: _myAgent.listOfBOM.getInputs()) {
	int _orderQuantity = 0;
	String _policy = getPolicy(_input);
	int _policie =0;
	if (_policy.equals("sS"))	{
				_policie=1;
				//traceln ("sS :" + _input );	
			}else if (_policy.equals("MovAvg"))	{
				_policie=2;
				//traceln ("MovAvg :" + _input );	
				}	
	
	switch (_policie) {
		case 1:
		//traceln(_myAgent + ":applying policie sS for : " + _input);
		_orderQuantity = _myAgent.inventoryManagement.doInventory_sS(_myAgent,_input);
		break; 
		case 2:
		_orderQuantity = _myAgent.inventoryManagement.doMovingAverage(_myAgent,_input);
		// it is not necesary to update the S of this product it was used for initialization
		break;
		default : {
		_myAgent.inventoryManagement.doMovingAverage(_myAgent,_input);
		}
	}	
_myAgent.purchasing.applyPolicy(_myAgent,_input,_orderQuantity);	
_policy ="";	
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1305981756055</Id>
					<Name><![CDATA[getPolicy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-140</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_input]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[String found = "";
for (Policy p: InventoryPolicies) {
	if (p.product.equals(_input)) {
		found = p.policy;
		break;
	}
}

return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305981756066</Id>
					<Name><![CDATA[addPolicy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-140</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_input]]></Name>
						<Type><![CDATA[Policy]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("--- Start Add new Policy");
//Ss_Policie _Ss = new Ss_Policie(_product.productName,_product.S,_product.s);
this.InventoryPolicies.add(_input);
if (debugOn)
	traceln("Added: " + _input.policy + " inventory policy of: " + _input.product);
]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1291989635529</Id>
			<Name><![CDATA[Delivery]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299234900965</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-50</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299234900948</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1298371051560</Id>
					<Name><![CDATA[deliver]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-50</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_orderID]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[boolean success = false;
Order myOrder = _myAgent.incOrdList.getOrder(_orderID);

if (_quantity != 0){
	if (debugOn) {
		traceln("--- Start Delivery");	
		traceln("orderID = " + _orderID);
		traceln(myOrder);
		traceln("Remove Stock.");
	}
	success = _myAgent.stock.remove(myOrder.productName, _quantity, "NotReserved");
//	_myAgent.delivering=true;
	if (debugOn)
		traceln("OK.");
	if (success) {
		Shipment msg = new Shipment(_myAgent);
		msg.orderID = _orderID;
		msg.destination = myOrder.sender;
		msg.productName = myOrder.productName;
		msg.quantity = _quantity;
		double _price = _myAgent.priceList.getPriceOf(myOrder.productName);
		msg.price = _price;
		_myAgent.balanceSheet.add("Sale",myOrder.productName,_quantity*_price);	
		if (debugOn) {
			traceln( "*-*-*-*-* Sale *-*-*-*-*-* " + _quantity + " pieces of " + myOrder.productName +" at "+ _price +"€" );
			traceln("------ Sende " + msg);
		}		
		_myAgent.send(msg, AgentContinuous2D.ALL_CONNECTED);
	}

} else if (_quantity == 0){
	Shipment _msg = new Shipment (_myAgent);
	_msg.orderID = _orderID;
	_msg.destination = myOrder.sender;
	_msg.productName = myOrder.productName;
	_msg.quantity = 0;
	_msg.price = 0;
	//_myAgent.balanceSheet.add("Lost Sale",myOrder.productName,__);	
	if (debugOn)
		traceln( "* LOST SALE *  of " + myOrder.productName );
	_myAgent.send(_msg, AgentContinuous2D.ALL_CONNECTED);
	// Has to be that way, because I use it this way to deliver to the Transporter!!!
	
	//_myAgent.delivering = false;
}
if (debugOn)
	traceln("--- End Deliver");
return success;]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1292932769344</Id>
			<Name><![CDATA[PriceList]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1299149245422</Id>
					<Name><![CDATA[newPrice]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue><![CDATA[1]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1299078981795</Id>
					<Name><![CDATA[Margin]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[1]]></DefaultValue>
						<ParameterEditor>
							<Id>1299078981793</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299149030655</Id>
					<Name><![CDATA[factor]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[1]]></DefaultValue>
						<ParameterEditor>
							<Id>1299149030653</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299236522127</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236522125</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1292932769347</Id>
					<Name><![CDATA[prList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[PriceL]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297427504087</Id>
					<Name><![CDATA[cstList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[PriceL]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1292932769359</Id>
					<Name><![CDATA[remove]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297091805865</Id>
					<Name><![CDATA[getPriceOf]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double gPr = -1;
for (int i = prList.size() - 1; i >= 0; i-- ) {
	PriceL p = prList.get(i);
	if (p.name.equals(_product)){
		gPr = p.price;
		break;
	}
}
if (gPr == -1) {
	if (debugOn)
		traceln( "*** " + this.getFullName().toString().substring(5)+ " cant quote: " + _product + " because I does not produce it");
}	
return gPr;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297092280522</Id>
					<Name><![CDATA[addPrice]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>573</X><Y>129</Y>
					<Label><X>17</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[PriceL]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("--- Start Add New Price");

this.prList.add(_product);
if (debugOn)
	traceln("Added new Price of " + _product);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297427832976</Id>
					<Name><![CDATA[addCost]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>570</X><Y>160</Y>
					<Label><X>17</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[PriceL]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("--- Start Add New Price/Cost");
this.cstList.add(_product);
if (debugOn)
	traceln("Added new Cost of " + _product );
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297427908325</Id>
					<Name><![CDATA[getCostOf]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double gCst = -1;

for (int i = cstList.size() - 1; i >= 0; i-- ) {
	PriceL c = cstList.get(i);
	if (_product.equals(c.name)){

		gCst = c.price;
		break;	
	}
}	
if (gCst == -1){
	if (debugOn)
		traceln( "*** There is no COST in " + this.getFullName().toString().substring(5)+ " of: " + _product + " as Input ( Raw Material)");
}
return gCst;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297433291544</Id>
					<Name><![CDATA[generateNewPrice]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln ("_**/**/*/**/*/*/*/*/*/*/*/*/*/*/*/*/**/*/*////////////////////////////////");
this.Margin = (uniform_pos()*0.5)* (this.factor);
if (debugOn)
	traceln("New Margin Factor : " + Margin);

for (String product: _myAgent.listOfBOM.getOutputs()) {
	double costPerOutput = 0;
	if (debugOn)
		traceln("Current Product: " + product);
	for (BOM b: _myAgent.listOfBOM.getBOMOfProduct(product)) {
		costPerOutput += getCostOf(b.input) * b.quantity;
		if (debugOn) {
			trace("In this case the registered cost of: " + b.input);
			traceln(": " +getCostOf(b.input));
		}
	}
	PriceL p= new PriceL(product, costPerOutput * (1 + Margin));
	if (debugOn)
		traceln("New price for " + product +  ": " + p.price);
	newPrice=p.price;
	this.addPrice(p);
}	
//traceln ("_**/**/*/**/*/*/*/*/*/*/*/*/*/*/*/*/**/*/*////////////////////////////////");]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1292932847340</Id>
			<Name><![CDATA[ReceiveShipment]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236779521</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236779519</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1292932847342</Id>
					<Name><![CDATA[onReceiveShipment]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>330</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_shipment]]></Name>
						<Type><![CDATA[Shipment]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn) {
	traceln("---- Receive Shipment");
	traceln("Shipment Destination:" + _shipment.destination);
	traceln("Receiver " + _myAgent.Name);
}
Order o;
if (_shipment.destination.equals(_myAgent.Name)) {
	if (debugOn)
		traceln(" Shipment Received" + _shipment);
	_myAgent.stock.add(_shipment.productName, _shipment.quantity, "NotReserved");
	PriceL p = new PriceL();
	p.name =_shipment.productName;
	p.price =_shipment.price;
	o = _myAgent.outOrdList.getOrder(_shipment.orderID);
	double qty_ordered= o.quantity;
	o.recipient= _shipment.sender;
	String status = "";
	if (qty_ordered == _shipment.quantity){
		 status="FullySatisfied";
		_myAgent.priceList.addCost(p);
		_myAgent.balanceSheet.add("Material Paid",_shipment.productName,_shipment.quantity*-1*_shipment.price);
	}else if (_shipment.quantity == 0){
		 status="NoneSatisfied";
		 
	} else if ( _shipment.quantity < qty_ordered) {
		 status = "PartiallySatisfied";
		 o.quantity=_shipment.quantity;
		_myAgent.priceList.addCost(p);
		_myAgent.balanceSheet.add("Material Paid",_shipment.productName,_shipment.quantity*-1*_shipment.price);
	}
_myAgent.outOrdList.statusChange(_shipment.orderID,_shipment.quantity,status, time());	
} else {
	if (debugOn)
		traceln("Shipment not accepted");
}
// Reception of shipments]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1293447385848</Id>
			<Name><![CDATA[ListOfBOM]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236735289</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>440</X><Y>-340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236735287</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1293447385850</Id>
					<Name><![CDATA[BOMList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>410</X><Y>-240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[BOM]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1293447385856</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>-280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[BOM]]></Type>
					</Parameter>
					<Body><![CDATA[//Adding orders to the list 
//1- Take the lines from the Excel containing the catalog of the global BOM called once in the simulation main 
//2- add it to the FullBOM available in the the Supply Chain Simulation MAIN 
BOM p= new BOM(_product.productName, _product.input, _product.quantity);
this.BOMList.add(p);
if (debugOn)
	traceln("NEW BOM: " + p);

//**The _product BOM is generate when reading each line of the Excel File containing the Catalog of BOM

// Remember the FullBOM : is the list that it will get from Excel table to build BOM with the following arguments:

// Final product name
// Part x in that final product
// Quantity 
// Units 
// Process time 

//**in case the Final product has more than one part then in the excel table 
// will be another row with the same final product name but different Part, Quantity , Units and Process Time.
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[ArrayList<BOM>]]></ReturnType>
					<Id>1294124995213</Id>
					<Name><![CDATA[getBOMOfProduct]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>-240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[ArrayList<BOM> tmp = new ArrayList<BOM>();
for (BOM b : BOMList) {
	if (_product.equals(b.productName) ){
		tmp.add(b);
	if (debugOn)
		traceln("Content of BOM of "+ b.productName + ": " + b);	
	}
}
return tmp;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[ArrayList<String>]]></ReturnType>
					<Id>1294125051088</Id>
					<Name><![CDATA[getInputs]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>-140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[ArrayList<String> tmp1 = new ArrayList<String>();

for (int i=0; i<BOMList.size(); i++) {
	String p = BOMList.get(i).input;
	tmp1.add(p);
}

return tmp1;

/*ArrayList<String> tmp = new ArrayList<String>();
for (BOM b: BOMList) {
	if (!tmp.contains(b.input)) {
		tmp.add(b.input);
	}
}
return tmp;
*/

/*ArrayList<String> tmp = new ArrayList<String>();
for (BOM b: BOMList) {
	if (tmp.indexOf(b.input) == -1) {
		tmp.add(b.input);
	}
}
return tmp;*/

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[ArrayList<String>]]></ReturnType>
					<Id>1294125068489</Id>
					<Name><![CDATA[getOutputs]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>-170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[ArrayList<String> tmp1 = new ArrayList<String>();

for (int i=0; i<BOMList.size(); i++) {
	String p = BOMList.get(i).productName;
	tmp1.add(p);
}

return tmp1;

/*
String Name = _productName;

for ( int i=0; i<productName.size(); i++) {
	 if (Name.equals(productName.get(i))){
		tmp.add(agentName.get(i));
	}
}

return tmp;
*/
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1298051289722</Id>
					<Name><![CDATA[iProduce]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>460</X><Y>-170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[boolean found = false;
for (String s : getOutputs()) {
	if (s.equals(_product)) {
		found = true;
		break;
	}
}
return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1305994355074</Id>
					<Name><![CDATA[getTotalAvgReqPerInput]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>600</X><Y>-70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_input]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[//Get all product where _input is used 
double _inputAvgAccum = 0;
// Get final products 
double _inputReqperProduc = 0;

for (String output: _myAgent.listOfBOM.getOutputs()) {
	// get the BOM the output
	for (BOM b : _myAgent.listOfBOM.getBOMOfProduct(output)) {
		//Check whether it uses teh _input or not   
		//Identify if it is INPUT - accumulates for all product 
		if (b.input.equals(_input)) {
			//requeriments for these product			
			if (debugOn)
				traceln (_input + " is Input of " +  output + " in agent "+ _myAgent.Name);
			int lastOrder =_myAgent.incOrdList.getLastOrderedByProduct(b.productName);
			Order p = _myAgent.incOrdList.getOrder(lastOrder);
			if (debugOn)
				traceln (p + "last order of: " + b.productName);
			int previousLastOrder = _myAgent.incOrdList.getPrevioustoLastOrderedByProduct(b.productName);
			Order q = _myAgent.incOrdList.getOrder(previousLastOrder);
			if (debugOn)
				traceln(q + "Previous to last of: " + b.productName);
			if (lastOrder!= -1 && previousLastOrder!=-1 ) {	
				_inputReqperProduc += (b.quantity*(p.quantity+q.quantity))/2;
			}
			break;
		} else if (b.productName.equals(_input)){
			//requeriments for these product			
			if (debugOn)
				traceln (_input + " is a final product in agent " + _myAgent.Name );
			int lastOrder = _myAgent.incOrdList.getLastOrderedByProduct(b.productName);
			Order p = _myAgent.incOrdList.getOrder(lastOrder);
			traceln(p + "last order of: " + b.productName);
			int previousLastOrder = _myAgent.incOrdList.getPrevioustoLastOrderedByProduct(b.productName);
			Order q = _myAgent.incOrdList.getOrder(previousLastOrder);
			if (debugOn)
				traceln(q + "Previous to last of: " + b.productName);
			if (lastOrder!= -1 && previousLastOrder!=-1 ) {
				_inputReqperProduc= _inputReqperProduc + ((p.quantity+q.quantity)/2);
			}
			break;
		}
	}
	//Requeriemintos de todos los final products	
	_inputAvgAccum =  _inputAvgAccum + _inputReqperProduc;
	if (debugOn)
		traceln (_inputAvgAccum + " accumlated req of : " + _input+  " in: " + _myAgent);
}

return _inputAvgAccum;]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1293447921664</Id>
			<Name><![CDATA[ProductionManagement]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1295863382075</Id>
					<Name><![CDATA[productionRate]]></Name>
					<Description><![CDATA[it is the overall production rate of the BB , which if o will put the individual productionrates of the outputs to cero ]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue><![CDATA[1]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1297091340014</Id>
					<Name><![CDATA[_BB_PRparameter]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[1.0]]></DefaultValue>
						<ParameterEditor>
							<Id>1297091340012</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1298042661066</Id>
					<Name><![CDATA[_var_prod_cost]]></Name>
					<Description><![CDATA[this is a rate per unit produced. npow it is fixed , but it should be caclulated by divieing the Production fix costs between the amount of output  from production]]></Description> 
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[0.015]]></DefaultValue>
						<ParameterEditor>
							<Id>1298042661064</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1298042665886</Id>
					<Name><![CDATA[_IHC_Finish_product_cost_rate]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[0.02]]></DefaultValue>
						<ParameterEditor>
							<Id>1298042665884</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1298042669911</Id>
					<Name><![CDATA[_IHC_WIP_2_at_Production]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[double]]></Type>        
						<DefaultValue><![CDATA[0.010]]></DefaultValue>
						<ParameterEditor>
							<Id>1298042669909</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299235351702</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299235351700</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1305642776437</Id>
					<Name><![CDATA[_NoneDisruption]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[true]]></DefaultValue>
						<ParameterEditor>
							<Id>1305642776435</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1294128905574</Id>
					<Name><![CDATA[currentProduction]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>650</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297090220529</Id>
					<Name><![CDATA[outputPR]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>650</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[ProductionRate]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1306150124161</Id>
					<Name><![CDATA[ProductionStrategy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>650</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Policy]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1306157820420</Id>
					<Name><![CDATA[ProductionStock]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>650</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[StockItem]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1293447921676</Id>
					<Name><![CDATA[doProductionManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>660</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[/*//boolean debugOn= true;
if (debugOn)
	traceln("--- Start doProductionManagement " + _myAgent.Name);
for (String output: _myAgent.listOfBOM.getOutputs()) {
	double S = _myAgent.inventoryManagement.getUpperLevel(output);
	double s = _myAgent.inventoryManagement.getLowerLevel(output);
	//traceln(" s:" + s + " S:" + S + " of: " + output + " in: " + _myAgent.Name );
	boolean canProduce = true;
	boolean canStartProduction = false;
	double oldProductionRate;
	oldProductionRate = getPCAvailable(output);
	double maxProductionRate = 0.0;
	// only start production if inventory level between s and S
	if (debugOn)
		traceln("Outp " + output +" Inv " + _myAgent.stock.getInventoryOf(output) + " s "+ s + " S " + S + " ");
	
	if (_myAgent.stock.getInventoryOf(output) < S) {
		//esto verifica que es necesario producir	
		if (debugOn)
			traceln("Try to start: " + _myAgent.stock.getInventoryOf(output) + " inventario actual de :" + output + "con S:" + S);
		canStartProduction = true;
		// Get current production Rate
		maxProductionRate = _myAgent.productionManagement.getPC(output) * _BB_PRparameter;

		if(_NoneDisruption==false){
		maxProductionRate=0;
			if (debugOn)
			traceln ("Production Failure!!!- NOT ABLE TO PRODUCE AT ALL");
		}
	
	
		productionRate = _myAgent.risk.getCurrentProductionSpeed(maxProductionRate, oldProductionRate, 0);
		
		if (debugOn)
			traceln("oldPR " + oldProductionRate + " curPR " + productionRate + " maxPR "+ maxProductionRate);
		//ProductionRate _PR = new ProductionRate(output,productionRate);
		//addPC(_PR);
		// Comment für mich, hier fehlt die Anpassung der PR in der Arraylist	
		// Check NotReserved Inventory
		for (BOM b: _myAgent.listOfBOM.getBOMOfProduct(output)) {
// ****Aqui esta la limitante d production rate e Input !!
			//if (_myAgent.stock.getInventory(b.input, time(), "NotReserved") < b.quantity * productionRate) {
			if (_myAgent.stock.getInventory(b.input, time(), "NotReserved") < b.quantity ) {
          //traceln (_myAgent.Name + ": Not Reserved :" +_myAgent.stock.getInventory(b.input, time(), "NotReserved") + ": menor que: " + b.quantity * productionRate );
				canStartProduction = false;
				_myAgent.producing = false;
				break;
			}
		}
		if (debugOn)
			traceln("CanStartProduction = " + canStartProduction);
		
	
		
		if (debugOn)
			traceln("Currently in Production" + currentProduction);
		if (!currentProduction.contains(output) && canStartProduction) {
		// Reserve Inventory
			for (BOM b: _myAgent.listOfBOM.getBOMOfProduct(output)) {				
// ****aqui debe ser por la cantidad necesitada a producir no por el productionRate solo 
				double qtNeeded = (b.quantity * productionRate) - _myAgent.stock.getInventory(b.input, time(), "Reserved");
				if (debugOn)
					traceln("From " + b.input + " I need to reserve " + qtNeeded);
				if (qtNeeded > 0) {
					_myAgent.stock.remove(b.input, qtNeeded, "NotReserved");
					_myAgent.stock.add(b.input, qtNeeded, "Reserved");
				}
			}
		}
		// check if there is reserved Inventory
		for (BOM b: _myAgent.listOfBOM.getBOMOfProduct(output)) {
//*** no estoy seguro si debe ser por el production rate necesariamente o por la cantidad necesitada		
//			if (_myAgent.stock.getInventory(b.input, time(), "Reserved") < b.quantity * productionRate) {
			if (_myAgent.stock.getInventory(b.input, time(), "Reserved") < b.quantity) {
				canProduce = false;
				_myAgent.producing = false;
				break;
			}
		}
		if (debugOn)
			traceln("CanProduce " + canProduce);
		if (!canProduce) {
			//traceln("Remove " + output + " with production rate " + productionRates.get(currentProduction.indexOf(output)));
			currentProduction.remove(output);
			
		} else if (!currentProduction.contains(output)) {
			currentProduction.add(output);
		}
		if (debugOn)
			traceln("Currently in Production" + currentProduction);
		// Now for real the Production
		if (currentProduction.contains(output)) {
			_myAgent.producing=true;
			// I have to check if there is still 
			for (BOM b: _myAgent.listOfBOM.getBOMOfProduct(output)) {
				_myAgent.stock.remove(b.input, b.quantity * productionRate, "Reserved");
			}
			_myAgent.stock.add(output, productionRate, "NotReserved");
			 
			// Here production is the varibale production cost 
			//double prodCost = _myAgent.priceList.getPriceOf(output);
			//double prodCost = _myAgent.get_Main().priceList.getPriceOf("Production"+output);
			_myAgent.balanceSheet.add("Production cost",output, productionRate * -_var_prod_cost);
			if (debugOn)
				traceln("Produced cost " + productionRate + " " + output);
			
			// temporary, we are finished producing
			currentProduction.remove(output);
		}
	}
	
	
	// Calculate inventory holding cost and add to Balancesheet
	// here is a % of the actual Price/cost of Input/output existance in inventory.
	_myAgent.balanceSheet.add("IHC Work in Progress 2", output, _myAgent.stock.getInventory(output, time(), "Reserved") * _myAgent.priceList.getPriceOf(output)*-_IHC_WIP_2_at_Production);
	if (debugOn)
		traceln( "Reserved Stock : " + _myAgent.stock.getInventory(output, time(), "Reserved"));
	_myAgent.balanceSheet.add("IHC Finished Products", output, _myAgent.stock.getInventory(output, time(), "NotReserved") * _myAgent.priceList.getPriceOf(output)*-_IHC_Finish_product_cost_rate);
}
if (debugOn)
	traceln("--- End doProductionManagement "  + _myAgent.Name);
*/
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1297090373096</Id>
					<Name><![CDATA[getPCAvailable]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1060</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_outputProductName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[return this.getPCByStatus(_outputProductName, time(), "NotReserved");]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1306068182827</Id>
					<Name><![CDATA[doMakeToStock]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>790</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_output]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int requeriedQty = 0;
//1- Get Inventory Policy of the output 
String policy = _myAgent.inventoryManagement.getPolicy(_output);
if (debugOn)
traceln (_myAgent+ " uses Inventory Policie: " +policy + " for: " +_output  );
//2- Get Current inventory of output 
//double inventoryLevel = _myAgent.stock.getInventoryOf(_output);
//3- Depending the inventory policy of the output determine the quantity required to produce 
// 3.1 - sS
if (policy.equals("sS")){
//Amount limited by "S"
requeriedQty = _myAgent.inventoryManagement.doInventory_sS(_myAgent,_output);
if (debugOn)
traceln ( " S of: " + _output + " : " + requeriedQty);
}
// 3.2 _ MovAvg
else if (policy.equals("MovAvg")){
requeriedQty = _myAgent.inventoryManagement.doMovingAverage(_myAgent,_output);
if (debugOn)
traceln ( " MovAvg of: " + _output + " : " + requeriedQty);
} 
//4- Get Production Capacity available for that output 
double productionCapacity = getPCAvailable(_output);
double productionFeasiableQty = 0;
boolean capacityAvailable = true;
if ( productionCapacity>0){

//5- Amount will be limited by theproduction Capacity 
// Determine if the how much of the required quantity is able to produce
// this is a production by period , does not  queues and avoid possibility to produce below zero..that would be backlog capability...
	double limitProduction= (requeriedQty/productionCapacity);
	
	if ( limitProduction <= 1){
	// if PC is very high , the production limitation  will come further based on the availability of RM
		productionFeasiableQty = requeriedQty;
	} else {
	// here the production capacity Limits the qty of product required
		productionFeasiableQty = productionCapacity;
	}
}else if (productionCapacity <= 0){
// No need to continue , theres is not capacity available at all
capacityAvailable = false;
}
// There is Capacity Available then I look if I have enough RM 
if (capacityAvailable){
	//6- Reserve capacity needs by updating the status of the capacity ( reserved , not reserved)
	//Remove capacity , in case it is not used is because it was not enough materiasl , and the other 
	//simultaneous other will have the same problem.Aqui la capacidad para no jugarmela en caso de ordenes varias ordenes simultaneas del mismo producto
	//The reserved capacity will be the MAXIMUM amount to be produced 
	int originallyPCbooked = (int) productionFeasiableQty; //in case later is modified
	removePC(_output,originallyPCbooked,"Reserved");
	//7- Determine the quantity required per each output 
	boolean readytoProduceFinally = true;
	boolean noChangeInAmount = true;
	double maxAmountAbletoProduce =999999999;
	for (BOM b: _myAgent.listOfBOM.getBOMOfProduct(_output)) {
			if(_myAgent.stock.getInventory(b.input,time(),"NotReserved")<=b.quantity*productionFeasiableQty){
				maxAmountAbletoProduce = _myAgent.stock.getInventory(b.input,time(),"NotReserved");
				noChangeInAmount= false; 
				if (maxAmountAbletoProduce<=0){
				readytoProduceFinally = false; 
				//Not producing at all due to missing at least one component
				break;
				}
			 }
		} 
	if (readytoProduceFinally){
		 	if (!noChangeInAmount){
		 	//productionFeasiableQty will change to is  amount according to RM with the minimum level required for Producing
		 	productionFeasiableQty = (int) maxAmountAbletoProduce;
		 	}
			//Finally reserve materials	and Production Takes place at the same time
			for (BOM m: _myAgent.listOfBOM.getBOMOfProduct(_output)) {
				_myAgent.stock.remove(m.input,m.quantity*productionFeasiableQty,"Reserved");
			}			
						// Add finish product to inventory 
			_myAgent.stock.add(_output,productionFeasiableQty,"NotReserved");
			// Free Production Capacity ( originally reserved)
			addPC(_output,originallyPCbooked,"NotReserved");
	}
	else if (!readytoProduceFinally){
	// Not enough materials to produce at least one unit
	//still PC has to be free
	addPC(_output,originallyPCbooked,"NotReserved");
	} 
}else if (!capacityAvailable){
//all Capacity Booked
}



//10- Check if availability of all inputs ( "not reserved")
//10.1- Create a temporal array (input, not reserved qty / (BOM * qty req to produce))
//10.2- Compare if all inputs are greater than 1
//10.3 - If not, find the smallest rate 
//10.4 - Based on the smallest ratio determine which is the maximum equivalent it can be produce with that given amount of input not reserved
//** There is no work in progress
//11 - With the New amount then reserved all inputs
//12- record the price of inputs 
//13- determine the new unitary price of final product
//11- Refresh the reserved capacity to match the new maximum able to produce based on the available inputs 
//11- Produce
//12- Free all reserved capacity 
//13- Hand in final product to Stock
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1306150750980</Id>
					<Name><![CDATA[doMakeToOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>790</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_output]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[//////NOT YET DESIGNED !!!!!

//1- Get Current inventory of output 
//2- Get Inventory Policy of the output 
//3- Depending the inventory policy of the output determine the quantity required to produce 
// 3.1 - sS
// 3.2 _ MovAvg
//4- Get Production Capacity available for that output 
//5- Determine if  the how much of the required quantity is able to produce
// this is a production by period , does not  queues ..that woul be backlog..
//6- Reserve capacity needs by updating the status of the capacity ( reserved , not reserved)
//7- The reserved capacity will be the amount to be produced 
//8- Get the BOM of output
//9- Determine the quantity requirement by input
//10- Check if availability of all inputs ( "not reserved")
//10.1- Create a temporal array (input, not reserved qty / (BOM * qty req to produce))
//10.2- Compare if all inputs are greater than 1
//10.3 - If not, find the smallest rate 
//10.4 - Based on the smallest ratio determine which is the maximum equivalent it can be produce with that given amount of input not reserved
//** There is no work in progress
//11 - With the New amount then reserved all inputs
//12- record the price of inputs 
//13- determine the new unitary price of final product
//11- Refresh the reserved capacity to match the new maximum able to produce based on the available inputs 
//11- Produce
//12- Free all reserved capacity 
//13- Hand in final product to Stock
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1306157693620</Id>
					<Name><![CDATA[getPCByStatus]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1060</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_time]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[
if (debugOn) {
	trace("Geting Production Capacity of: ");
	trace("name = " + _name + " time = " + _time + " status = " + _status + " . ");
}
double currentPC = 0;
double latestTime = -0.01;
//for (int i = 0; i< stockData.size(); i++) {
for (StockItem s: ProductionStock) {
	//traceln(s);
	//traceln(latestTime);
	if ((s.productName.equals(_name)) && (s.status.equals(_status)) && (s.time > latestTime) && (s.time < _time + 1)) {
		//traceln("Found");
		latestTime = s.time;
		currentPC = s.quantity;
		
	}
}
if (currentPC<0){
if (debugOn)
	traceln ( "Error  : the Production Capacity of: " + _name + " with Status : " + _status + " is negative; ");
}
if (debugOn)
	traceln("LatestTime = " + latestTime + " current Production Capacity Available = " + currentPC + " for " + _name) ;
return currentPC;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1306157901173</Id>
					<Name><![CDATA[addPC]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1060</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[// USING PRODUCTION CAPACITY AS STOCK
if (debugOn)
	trace("Adding Production Capacity of : "+ _name );
boolean found = false;
double oldCapacity = 0.0;
double latestTime = -0.01;
if (debugOn)
	trace("Adding Production Capacity of: " + _name +  " from :" +_quantity + " with status: " + _status);
for (StockItem s: ProductionStock) {
	if ((s.productName.equals(_name)) && (s.status.equals(_status)) && (latestTime < s.time)) {
		latestTime = s.time;
		//traceln("latestTime = " + latestTime + " time = " + time());
		oldCapacity = s.quantity;
	}
}
double mytime = time();
if (latestTime >= mytime) {
	mytime = latestTime + 0.01;
	if (debugOn)
		trace("Same Timestamp. Adding 0.01, new time "+ mytime + "; ");
}	
StockItem newCapacity = new StockItem(_name, _quantity + oldCapacity, mytime, _status);
ProductionStock.add(newCapacity);
if (debugOn){
	traceln(newCapacity);
	traceln("--- End Add Stock");
	}





]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1306158842747</Id>
					<Name><![CDATA[removePC]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1060</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_status]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[//REMOVING CAPACITY AS STOCK 
if (debugOn)
	trace("Reserving Capacity for: " + _name);
boolean success = false;
double currentCapacity = getPCByStatus(_name, time(), _status);
if (debugOn) {
	trace("currentLevel= " + currentCapacity + ";");
	traceln("quantity= " + _quantity + ";");
}
if (currentCapacity >= _quantity) {
	this.addPC(_name, -_quantity, _status);
	success = true;
}
if (debugOn)
traceln ("Reserved Capacity for: " + _name + " of: " + _quantity+ " : " + success);
return success;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1306169488097</Id>
					<Name><![CDATA[applyStrategy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>940</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[for (String _output: _myAgent.listOfBOM.getOutputs()) {
	String _Strategy = getStrategy(_output);
	int _type =0;
	if (_Strategy.equals("MtS"))	{
				_type=1;
		}else if (_Strategy.equals("MtO"))	{
				_type=2;
				}	
	switch (_type) {
		case 1:
		if (debugOn)
		traceln(_myAgent + " :applying Strategy MtS for : " + _output);
		_myAgent.productionManagement.doMakeToStock(_myAgent,_output);
		break; 
		case 2:
		_myAgent.productionManagement.doMakeToOrder(_myAgent,_output);
		if (debugOn)
		traceln(_myAgent + " :applying Strategypolicie MtO for : " + _output);
		// it is not necesary to update the S of this product it was used for initialization
		break;
		default : {
		_myAgent.productionManagement.doMakeToStock(_myAgent,_output);
		if (debugOn)
		traceln(" Default Option MtS, therefore it is not recognizingthe Srting of Production Stratgey");
		}
	}
_Strategy ="";	
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1306169618614</Id>
					<Name><![CDATA[getStrategy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>940</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_output]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[String found = "";
for (Policy p: ProductionStrategy) {
	if (p.product.equals(_output)) {
		found = p.policy;
		break;
	}
}
if (debugOn)
	trace("Getting Production Strategy of final product: " + _output +  " : " + found);
return found;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1306169697082</Id>
					<Name><![CDATA[addInitialPC]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1060</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[ProductionRate]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_policy]]></Name>
						<Type><![CDATA[Policy]]></Type>
					</Parameter>
					<Body><![CDATA[//This is the Maximum installed capacity ( for controlling purposes)outputPR.add(_product);
outputPR.add(_product);
if (debugOn)
	trace("Adding Initial Production Rate of: " + _product.rate +  " to: " + _product.output );
// Final product Production Strategy MtS MtO
addStrategy(_policy);
// Add production capacity full NotReserved in the beginning
addPC(_product.output,_product.rate,"NotReserved");

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1306171079961</Id>
					<Name><![CDATA[addStrategy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>940</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_output]]></Name>
						<Type><![CDATA[Policy]]></Type>
					</Parameter>
					<Body><![CDATA[// MtS or MtO
this.ProductionStrategy.add(_output);
if (debugOn)
	trace("Adding Production Strategy of final product: " + _output.product +  " : " + _output.policy );
]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1295251084636</Id>
			<Name><![CDATA[InventoryManagement_Demand]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1297273993946</Id>
					<Name><![CDATA[demandedQty]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>340</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[int]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1297273993944</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1299237931620</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299237931618</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1305882034124</Id>
					<Name><![CDATA[changeInDemand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>570</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[int]]></Type>        
						<DefaultValue><![CDATA[1]]></DefaultValue>
						<ParameterEditor>
							<Id>1305882034122</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1295251202422</Id>
					<Name><![CDATA[demandProducts]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>330</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1295251084638</Id>
					<Name><![CDATA[doInventoryManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[

for (String product: demandProducts) {
//int qty =demandedQty;
double qty = modifyDemandBySlider(_myAgent);

_myAgent.demand_Quotes.applyPolicy(_myAgent,product,qty);	
}

/*	
NOW IT IS SEND TO CONNECTED WHEN CALLING APPLY POLICIES
Order o = new Order(_myAgent);
	o.productName = product;
	o.quantity = modifyDemandBySlider(_myAgent);

	if (debugOn) {
		traceln("--- Sende Order " + _myAgent.Name);
		traceln(o);
	}
	_myAgent.send(o, AgentContinuous2D.ALL_CONNECTED);
	_myAgent.outOrdList.add(o);
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1305881510341</Id>
					<Name><![CDATA[modifyDemandBySlider]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>570</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[int _demandedQty = (int) demandedQty*(1+changeInDemand/10);
_myAgent.Demand =_demandedQty;
return _demandedQty;]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1295503649433</Id>
			<Name><![CDATA[Risk]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1295863206531</Id>
					<Name><![CDATA[recovery]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>430</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue><![CDATA[0.1]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1295863229943</Id>
					<Name><![CDATA[uncertainty]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>430</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue><![CDATA[0]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1295863237731</Id>
					<Name><![CDATA[disruptions]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>430</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue><![CDATA[0]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1299236690448</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236690446</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1295504690989</Id>
					<Name><![CDATA[getCurrentProductionSpeed]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_max_speed]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_old_value]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_old_time]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// Production Function
//time() - old_time

double uncertainty_effect = (1 + normal(uncertainty));


double disruption_effect = 1;
if (poisson(1) >= 2) {
	disruption_effect = (1 - disruptions);
}

double speed = (recovery * (1)  + _old_value) * uncertainty_effect * disruption_effect;

double currentSpeed = min(_max_speed, max(speed, 0));
// for debugging
currentSpeed = _max_speed;

return currentSpeed;]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1296742642289</Id>
			<Name><![CDATA[ExcelInterface]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236991951</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>310</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236991949</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1296742642293</Id>
					<Name><![CDATA[doSaveGeneric]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_excelFileName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[
String _workSheet =_myAgent.Name;	
String _workSheet_BS =_myAgent.Name+"_BS";
excelFile.setFileName(_excelFileName);
excelFile.readFile();
	 // Writing of transactions from  Incoming and Outgoing Order		
		int headerLine = 1;
		excelFile.createCell(_workSheet,headerLine,1);
		excelFile.setCellValue("TYPE",_workSheet, headerLine,1);
		excelFile.createCell(_workSheet,headerLine,2);
		excelFile.setCellValue("ID",_workSheet,headerLine,2);
		excelFile.createCell(_workSheet,headerLine,3);
		excelFile.setCellValue("PRODUCT",_workSheet,headerLine,3);
		excelFile.createCell(_workSheet,headerLine,4);
		excelFile.setCellValue("QUANTITY",_workSheet,headerLine ,4);
		excelFile.createCell(_workSheet,headerLine,5);
		excelFile.setCellValue("CONNECT TO",_workSheet,headerLine,5);
		//excelFile.createCell(_workSheet,headerLine,6);
		//excelFile.setCellValue("RECIPIENT",_workSheet,headerLine,6);
		excelFile.createCell(_workSheet,headerLine,6);
		excelFile.setCellValue("STATUS",_workSheet,headerLine,6);
		excelFile.createCell(_workSheet,headerLine,7);
		excelFile.setCellValue("TIME",_workSheet,headerLine,7);

if (debugOn) {
	traceln("-----End writing Headers "+ _workSheet);
	traceln("Array Length " + _myAgent.incOrdList.getNumberAllOrders());
}
if (_myAgent.incOrdList.getNumberAllOrders() > 0)
	if (debugOn)
		traceln("Test Recipient " + _myAgent.incOrdList.getAllOrder(0).recipient);
int excelRow;
for(int k = 0; k < _myAgent.incOrdList.getNumberAllOrders(); k++){
	excelRow = headerLine + k + 1;
	excelFile.createCell(_workSheet,excelRow,1);
	excelFile.setCellValue("Incoming",_workSheet,excelRow,1);
	excelFile.createCell(_workSheet,excelRow,2);
	excelFile.setCellValue(_myAgent.incOrdList.getAllOrder(k).orderID,_workSheet,excelRow,2);
	excelFile.createCell(_workSheet,excelRow,3);
	excelFile.setCellValue(_myAgent.incOrdList.getAllOrder(k).productName,_workSheet,excelRow,3);
	excelFile.createCell(_workSheet,excelRow,4);
	excelFile.setCellValue(_myAgent.incOrdList.getAllOrder(k).quantity,_workSheet,excelRow,4);
	excelFile.createCell(_workSheet,excelRow,5);
	excelFile.setCellValue(_myAgent.incOrdList.getAllOrder(k).sender,_workSheet,excelRow,5);
	//excelFile.createCell(_workSheet,excelRow,6);
	//excelFile.setCellValue(_myAgent.incOrdList.getAllOrder(k).recipient,_workSheet,excelRow,6);
	excelFile.createCell(_workSheet,excelRow,6);
	excelFile.setCellValue(_myAgent.incOrdList.getStatus(_myAgent.incOrdList.getAllOrder(k).orderID).status,_workSheet,excelRow,6);
	excelFile.createCell(_workSheet,excelRow,7);
	excelFile.setCellValue(_myAgent.incOrdList.getStatus(_myAgent.incOrdList.getAllOrder(k).orderID).recTime,_workSheet,excelRow,7);
}

	traceln("-----End writing incoming orders "+ _workSheet);	
int newExcelRow = _myAgent.incOrdList.getNumberAllOrders();
for(int k = 0; k < _myAgent.outOrdList.getNumberAllOrders() ; k++){
	excelRow = newExcelRow + k + 1;
	excelFile.createCell(_workSheet,excelRow,1);
	excelFile.setCellValue("Outgoing",_workSheet,excelRow,1);
	excelFile.createCell(_workSheet,excelRow,2);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).orderID,_workSheet,excelRow,2);
	excelFile.createCell(_workSheet,excelRow,3);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).productName,_workSheet,excelRow,3);
	excelFile.createCell(_workSheet,excelRow,4);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).quantity,_workSheet,excelRow,4);
	excelFile.createCell(_workSheet,excelRow,5);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).recipient,_workSheet,excelRow,5);
	//excelFile.createCell(_workSheet,excelRow,6);
	//excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).sender,_workSheet,excelRow,6);
	excelFile.createCell(_workSheet,excelRow,6);
	excelFile.setCellValue(_myAgent.outOrdList.getStatus(_myAgent.outOrdList.getAllOrder(k).orderID).status,_workSheet,excelRow,6);
	excelFile.createCell(_workSheet,excelRow,7);
	excelFile.setCellValue(_myAgent.outOrdList.getStatus(_myAgent.outOrdList.getAllOrder(k).orderID).recTime,_workSheet,excelRow,7);
}
				
			// Writing of BALANCESHEET 
int _headerLine = 1;
excelFile.createCell(_workSheet_BS,_headerLine,1);
excelFile.setCellValue("TRANSACTION CATEGORY",_workSheet_BS,_headerLine,1);
excelFile.createCell(_workSheet_BS,_headerLine,2);
excelFile.setCellValue("ITEM",_workSheet_BS,_headerLine,2);
excelFile.createCell(_workSheet_BS,_headerLine,3);
excelFile.setCellValue("TIME",_workSheet_BS,_headerLine,3);
excelFile.createCell(_workSheet_BS,headerLine,4);
excelFile.setCellValue("VALUE",_workSheet_BS,_headerLine ,4);
excelFile.createCell(_workSheet_BS,headerLine,5);
excelFile.setCellValue("TOTAL BALANCE",_workSheet_BS,_headerLine,5);
			
if (debugOn) {
	traceln("-----End writing Headers "+ _workSheet_BS);
	traceln("Array Length of BALANCE SHEET " + _myAgent.balanceSheet.getNumberAllBS());		
}
if (_myAgent.balanceSheet.getNumberAllBS() > 0) 
	if (debugOn)
		traceln("Test Categorie " + _myAgent.balanceSheet.getAllBS(0).Category);
int _excelRow;
for(int _k = 0; _k < _myAgent.balanceSheet.getNumberAllBS(); _k++){
	excelFile.createCell(_workSheet_BS,2,5);
	excelFile.setCellValue(_myAgent.balanceSheet.getBalance(),_workSheet_BS,2,5);
	_excelRow = _headerLine + _k + 1;
	excelFile.createCell(_workSheet_BS,_excelRow,1);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Category,_workSheet_BS,_excelRow,1);
	excelFile.createCell(_workSheet_BS,_excelRow,2);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Item,_workSheet_BS,_excelRow,2);
	excelFile.createCell(_workSheet_BS,_excelRow,3);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Time,_workSheet_BS,_excelRow,3);
	excelFile.createCell(_workSheet_BS,_excelRow,4);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Value,_workSheet_BS,_excelRow,4);
}
if (debugOn)				
	traceln("-----End writing whole "+ _workSheet + "and " + _workSheet_BS + ".");	
			

excelFile.writeFile();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297090031835</Id>
					<Name><![CDATA[doReadGeneric]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_excelFileParameters]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[excelFile_Parameters.setFileName(_excelFileParameters);
excelFile_Parameters.readFile();
String BBName = _myAgent.Name;
//String _BBColumnName =_BBRealName.substring(5);
int headrow = 1; // row with the titles of the columns
int row =headrow + 1; // Starting row for looking the x and products to include in the BOM
int column = 4; // Starting column for looking the name of BB


boolean goon = true;
int myColumn = -1;
// Find my Column
if (debugOn)
	traceln("My Name = " + BBName);

/////////////////// Reading Coordinates ///////////////////
if (debugOn)
	traceln("Setting Coordinates");
//int number_of_BB = _myAgent.get_Main().Supply_Chain.size();
int number_of_BB = 10;
int verticalMult = 120;
int verticalOffset = 100;
int horizontalMult = 150;
int horizontalOffset = 70;
//Moving per Row
boolean found = false;
for (int horizontal= 1; horizontal < number_of_BB ; horizontal++){
	for (int vertical= 1 ; vertical < number_of_BB; vertical++){
		if (excelFile_Parameters.cellExists("Coordinates",vertical,horizontal)){
		 	if(excelFile_Parameters.getCellStringValue("Coordinates", vertical,horizontal).equals(BBName)) {
		 	if (debugOn)
		 		traceln("Found Agent " + BBName + " Set Coordinates " + (verticalOffset + (vertical ) * verticalMult) + "x" + (horizontalOffset + (horizontal -1) * horizontalMult));
		    _myAgent.setXY(horizontalOffset + (horizontal-1)*horizontalMult, verticalOffset + (vertical -1)*verticalMult);	
		    //_myAgent.setXY(100,100);
		    break;
		    } 	 
		 //break;
		 }
	}
}


//traceln("SetXY " + (int)excelFile_Parameters.getCellNumericValue(BBName,2,8) + " : " + (int) excelFile_Parameters.getCellNumericValue(BBName,2,9));
//_myAgent.setXY((int)excelFile_Parameters.getCellNumericValue(BBName,2,8), (int) excelFile_Parameters.getCellNumericValue(BBName,2,9));


while (goon) {
	String value = "";
	if (excelFile_Parameters.cellExists("BOM",1,column)) {
		value = excelFile_Parameters.getCellStringValue("BOM",1,column);
	}
	if (debugOn)
		traceln("Current Column = " + value);
	if ( value.equals(BBName) ) {
		myColumn = column;
		goon = false;
		break;
	} else if (value.equals("")) {
		goon = false;
		break;
	}
	column++;
}

if (debugOn)
	traceln("My Column = " + myColumn);
if (myColumn != -1) {
	while (excelFile_Parameters.cellExists("BOM",row,1)) {
		String _productioncapable = "";
		if (excelFile_Parameters.cellExists("BOM",row,myColumn)) {
			_productioncapable = excelFile_Parameters.getCellStringValue("BOM",row,myColumn);
		}
		if (_productioncapable.equals("x")){
			BOM b = new BOM();
			String _product= excelFile_Parameters.getCellStringValue("BOM",row,1);
			b.productName=_product; 
			String _input= excelFile_Parameters.getCellStringValue("BOM",row,2);
			b.input=_input;
			double qty_dbl = excelFile_Parameters.getCellNumericValue("BOM",row,3);
			//int qty_int = (int)qty_dbl;
			b.quantity= qty_dbl;
			_myAgent.listOfBOM.add(b);
			if (debugOn)
				traceln("Just added " + b + " to " + BBName);
		}
		row++;
	}
}

// Now the cycle to search each for the worksheets with the same name of myAgent
String _BBParameterSheet = "";
int _BBSheetIndex = -1;
for(int i = 1; i< excelFile_Parameters.getNumberOfSheets()+1; i++){
	_BBParameterSheet = excelFile_Parameters.getSheetName(i);
	if (_BBParameterSheet.equals(BBName)){ 
		_BBSheetIndex = i;
		break;
	}
}

// Once the sheet index i found then we write the parameters in that worksheet in myAgent
if (_BBSheetIndex != -1){
	boolean _goon = true; //for the column loop
	int _ProductColumn = 3; //3 because there are the first products/parts
	if (debugOn)
		traceln("Reading parameters of BB = " + excelFile_Parameters.getSheetName(_BBSheetIndex));
	// Loop for reading the product/inputs columns with parameters
	while (_goon) {
		//int _row = 3; // 3 because in any case there are the first parameters to read
		int _productType=-1;
		int _policie =-1;
		if (excelFile_Parameters.cellExists(_BBSheetIndex,1,_ProductColumn)) {
			String _productName = excelFile_Parameters.getCellStringValue(_BBSheetIndex,1,_ProductColumn);
			/*To double check it will get the listOfBOM in order to use the same name 
			 * as save in the ListOfBOM*/
			for (String product: _myAgent.listOfBOM.getOutputs()) {
				if (product.equals(_productName)){
				if (debugOn)
					traceln("Product: " + _productName + " exists in BOM as OUTPUT of "+ _BBParameterSheet);
				_productType = 1;
				break;
				} 
			}
			for (String input: _myAgent.listOfBOM.getInputs()){
				if (input.equals(_productName)){
				if (debugOn)
					traceln("Input: " + _productName+ " exists in BOM as INPUT of "+ _BBParameterSheet);
				_productType = 2;
				break;
				} 						
			}
			String InvPolicie =excelFile_Parameters.getCellStringValue(_BBSheetIndex,3,_ProductColumn);
			if (InvPolicie.equals("sS"))	{
				_policie=1;
			}else if (InvPolicie.equals("MovAvg"))	{
				_policie=2;
			}	
						
			//Case according to type 1: Output, 2: Input							
			switch (_productType){
				case 1:
					// If it is Output it will read price and product rate
					PriceL _price = new PriceL();
					_price.name=_productName;
					double p = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,10,_ProductColumn);
					_price.price = p;
					String c = excelFile_Parameters.getCellStringValue(_BBSheetIndex,11,_ProductColumn);
					_price.currency = c;
					_myAgent.priceList.addPrice(_price);
					if (debugOn)
						traceln(_price);
					// then adding production rate
					double _rate = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,8,_ProductColumn);
					if (debugOn)
						traceln(_rate);
					ProductionRate pr = new ProductionRate();
					pr.output =_productName;
					pr.rate = _rate;
					Policy pol = new Policy ();
					// Production Strategy MtS o MtO
					String _ProductionStrategy = excelFile_Parameters.getCellStringValue(_BBSheetIndex,9,_ProductColumn);
					pol.product = _productName;
					pol.policy = _ProductionStrategy;
					if (debugOn)
						traceln("Setting Production Parameters");
					_myAgent.productionManagement.addInitialPC(pr,pol);
					break;
				case 2:
					// its an Input
					if (debugOn)
						traceln( "Initial COST of INPUT: " + _productName + " is 0.1");// If it is INPUT it will not look for price or product rate.
					PriceL _cost = new PriceL();
					_cost.price = 0.1;
					_cost.name =_productName;
					_cost.currency= "Euros";
					_myAgent.priceList.addCost(_cost);
					if (debugOn)
						traceln(_cost);
					break;
				default: 
					if (debugOn) {
						traceln("Product or Input: "+ _productName+ " does not exists in BOM of " +BBName + " .");
						traceln("Product "+ _productName +" type does not exist or not specified, there should be just Products or Inputs");
					}
			}
			//Case according to inventory policie
			switch (_policie){
				case 1:// save parameters for Ss inventory policie 
					Policy _policyType =new Policy();
					_policyType.policy = "sS";
					_policyType.product = _productName;
					_myAgent.inventoryManagement.addPolicy(_policyType);
					Ss_Policy levels = new Ss_Policy(); 
					levels.productName = _productName;
					double _S = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,4,_ProductColumn);
					levels.S = _S;
					double _s = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,5,_ProductColumn);
					levels.s=_s;
					_myAgent.inventoryManagement.add(levels);	
					// Adding initial Inventories 
					//Outputs initial inventory level = S
					//Input initial inventory level = S
					if ( _productType== 1){
						_myAgent.stock.add(_productName, _S, "NotReserved");	
						if (debugOn)
							traceln("***Added: " + _S + " to OUTPUT Stock of :" + _productName + ": as NotReserved for " + BBName + " .***");				
					
					} else if(_productType == 2){
						_myAgent.stock.add(_productName,_S,"NotReserved");	
						if (debugOn)
							traceln("***Added: " + _S + " to INPUT Stock of :" + _productName + ": as NotReserved for " + BBName + " .***");				
					}
					if (debugOn) {
						traceln(_myAgent.stock.getInventoryOf(_productName));
						traceln(_myAgent.stock.getInventory(_productName, time(), "NotReserved"));
					}
					break;
				case 2://For Moving Average
					Policy _policyType1 =new Policy();
					_policyType1.policy = "MovAvg";
					_policyType1.product = _productName;	
					_myAgent.inventoryManagement.addPolicy(_policyType1);				
					Ss_Policy levels1 = new Ss_Policy(); 
					levels1.productName = _productName;
					double _S_ = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,4,_ProductColumn);
					levels1.S = _S_;
					double _s_ = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,5,_ProductColumn);
					levels1.s=_s_;
					_myAgent.inventoryManagement.add(levels1);
					double _Initial = excelFile_Parameters.getCellNumericValue(_BBSheetIndex,4,_ProductColumn);
					if ( _productType== 1){
						_myAgent.stock.add(_productName, _Initial, "NotReserved");	
						if (debugOn)
							traceln("***Added: " + _Initial + " to OUTPUT Stock of :" + _productName + ": as NotReserved for " + BBName + " .***");				
					
					} else if(_productType == 2){
						_myAgent.stock.add(_productName,_Initial,"NotReserved");	
						if (debugOn)
							traceln("***Added: " + _Initial+ " to INPUT Stock of :" + _productName + ": as NotReserved for " + BBName + " .***");				
					}
					if (debugOn) {
						traceln(_myAgent.stock.getInventoryOf(_productName));
						traceln(_myAgent.stock.getInventory(_productName, time(), "NotReserved"));
					}
				break;	
				default:
					if (debugOn)
						traceln("Inventory policie not declared in the SC_BB");
			}
						
		}else {	
			_goon = false;
			if (debugOn)
				traceln ("Nomore products/inputs with name to include in this BB");
		}
	_ProductColumn++;
	}//end of _goon Loop		
} else {
	if (debugOn)
		traceln("There is any parameter configuration sheet for : "+ BBName + "!!!!");
}//end of else with the _BBSheetindex	
	
// end of read initialization of parameters



]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297855191542</Id>
					<Name><![CDATA[doReadTransporter]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_excelFileParameters]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Transport_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[excelFile_Parameters.setFileName(_excelFileParameters);
excelFile_Parameters.readFile();

String BBName = _myAgent.Name;
if (debugOn)
	traceln("Transporter");

//Reading Coordinates  
if (debugOn)
	traceln("Setting Coordinates");
//int number_of_BB = _myAgent.get_Main().Supply_Chain.size();
int number_of_BB = 10;
int verticalMult = 120;
int verticalOffset = 100;
int horizontalMult = 150;
int horizontalOffset = 70;
//Moving per Row
boolean found = false;
for (int horizontal= 1; horizontal < number_of_BB ; horizontal++){
	for (int vertical= 1 ; vertical < number_of_BB; vertical++){
		if (excelFile_Parameters.cellExists("Coordinates",vertical,horizontal)){
		 	if(excelFile_Parameters.getCellStringValue("Coordinates", vertical,horizontal).equals(BBName)) {
		 	if (debugOn)
		 		traceln("Found Transporter " + BBName + " Set Coordinates " +  (horizontalOffset + (horizontal -1) * horizontalMult)+ " X " + (verticalOffset + (vertical ) * verticalMult));
		    _myAgent.setXY(horizontalOffset + (horizontal-1)*horizontalMult, verticalOffset + (vertical -1)*verticalMult);	
		    //_myAgent.setXY(100,100);
		    break;
		    } 	 
		 //break;
		 }
	}
}

//traceln("SetXY " + (int)excelFile_Parameters.getCellNumericValue(BBName,2,5) + " : " + (int) excelFile_Parameters.getCellNumericValue(BBName,2,6));
//_myAgent.setXY((int)excelFile_Parameters.getCellNumericValue(BBName,2,5), (int) excelFile_Parameters.getCellNumericValue(BBName,2,6));

String association = "";
if(excelFile_Parameters.cellExists(BBName,1,2)) {
	association = excelFile_Parameters.getCellStringValue(BBName,1,2);
}
_myAgent.association = association;


Double delay = 1.0;
if(excelFile_Parameters.cellExists(BBName,2,2)) {
	delay = excelFile_Parameters.getCellNumericValue(BBName,2,2);
}
_myAgent.delay = delay;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297855194074</Id>
					<Name><![CDATA[doReadDemand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>400</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_excelFileParameters]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[
excelFile_Parameters.setFileName(_excelFileParameters);
excelFile_Parameters.readFile();
String BBName = _myAgent.Name;
//String _BBColumnName =_BBRealName.substring(5);
int headrow = 1; // row with the titles of the columns
int row =headrow + 1; // Starting row for looking the x and products to include in the BOM

boolean goon = true;
int myColumn = -1;
// Find my Column
if (debugOn) {
	traceln("My Name = " + BBName);

	traceln("Filling Demanded Products");
}
while (excelFile_Parameters.cellExists(BBName,row,1)) {
	String productName = excelFile_Parameters.getCellStringValue(BBName,row,1);
	int demandRate = (int)excelFile_Parameters.getCellNumericValue(BBName,row,2);
	_myAgent.inventoryManagement_Demand.demandProducts.add(productName);
	_myAgent.inventoryManagement_Demand.demandedQty = demandRate;
	row++;
}

//Reading Coordinates  
if (debugOn)
	traceln("Setting Coordinates");
//int number_of_BB = _myAgent.get_Main().Supply_Chain.size();
int number_of_BB = 10;
int verticalMult = 120;
int verticalOffset = 100;
int horizontalMult = 180;
int horizontalOffset = 70;
//Moving per Row
boolean found = false;
for (int horizontal= 1; horizontal < number_of_BB ; horizontal++){
	for (int vertical= 1 ; vertical < number_of_BB; vertical++){
		if (excelFile_Parameters.cellExists("Coordinates",vertical,horizontal)){
		 	if(excelFile_Parameters.getCellStringValue("Coordinates", vertical,horizontal).equals(BBName)) {
		 	if (debugOn)
		 		traceln("Found Demand " + BBName + " Set Coordinates " + (verticalOffset + (vertical ) * verticalMult) + "x" + (horizontalOffset + (horizontal -1) * horizontalMult));
		    _myAgent.setXY(horizontalOffset + (horizontal-1)*horizontalMult, verticalOffset + (vertical -1)*verticalMult);	
		    //_myAgent.setXY(100,100);
		    break;
		    } 	 
		 //break;
		 }
	}
}

//_myAgent.setXY((int)excelFile_Parameters.getCellNumericValue(BBName,2,4), (int)excelFile_Parameters.getCellNumericValue(BBName,2,5));
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297862817153</Id>
					<Name><![CDATA[doSaveTransporter]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_excelFileName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Transport_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[
String _workSheet = _myAgent.Name;	
String _workSheet_BS =_myAgent.Name+"_BS";
excelFile.setFileName(_excelFileName);
excelFile.readFile();
 // Writing of transactions from  Incoming and Outgoing Order		
int headerLine = 1;
excelFile.createCell(_workSheet,headerLine,1);
excelFile.setCellValue("TYPE",_workSheet, headerLine,1);
excelFile.createCell(_workSheet,headerLine,2);
excelFile.setCellValue("ID",_workSheet,headerLine,2);
excelFile.createCell(_workSheet,headerLine,3);
excelFile.setCellValue("PRODUCT",_workSheet,headerLine,3);
excelFile.createCell(_workSheet,headerLine,4);
excelFile.setCellValue("QUANTITY",_workSheet,headerLine ,4);
excelFile.createCell(_workSheet,headerLine,5);
excelFile.setCellValue("SENDER",_workSheet,headerLine,5);
excelFile.createCell(_workSheet,headerLine,6);
excelFile.setCellValue("RECIPIENT",_workSheet,headerLine,6);
excelFile.createCell(_workSheet,headerLine,7);
excelFile.setCellValue("STATUS",_workSheet,headerLine,7);
excelFile.createCell(_workSheet,headerLine,8);
excelFile.setCellValue("TIME",_workSheet,headerLine,8);

if (debugOn)
	traceln("-----End writing Headers "+ _workSheet);

				
			// Writing of BALANCESHEET 
int _headerLine = 1;
excelFile.createCell(_workSheet_BS,_headerLine,1);
excelFile.setCellValue("TRANSACTION CATEGORY",_workSheet_BS,_headerLine,1);
excelFile.createCell(_workSheet_BS,_headerLine,2);
excelFile.setCellValue("ITEM",_workSheet_BS,_headerLine,2);
excelFile.createCell(_workSheet_BS,_headerLine,3);
excelFile.setCellValue("TIME",_workSheet_BS,_headerLine,3);
excelFile.createCell(_workSheet_BS,headerLine,4);
excelFile.setCellValue("VALUE",_workSheet_BS,_headerLine ,4);
excelFile.createCell(_workSheet_BS,headerLine,5);
excelFile.setCellValue("TOTAL BALANCE",_workSheet_BS,_headerLine,5);
	
if (debugOn) {
	traceln("-----End writing Headers "+ _workSheet_BS);
	traceln("Array Length of BALANCE SHEET " + _myAgent.balanceSheet.getNumberAllBS());		
}
if (_myAgent.balanceSheet.getNumberAllBS() > 0) 
	if (debugOn)
		traceln("Test Categorie " + _myAgent.balanceSheet.getAllBS(0).Category);
int _excelRow;
for(int _k = 0; _k < _myAgent.balanceSheet.getNumberAllBS(); _k++){
	excelFile.createCell(_workSheet_BS,2,5);
	excelFile.setCellValue(_myAgent.balanceSheet.getBalance(),_workSheet_BS,2,5);
	_excelRow = _headerLine + _k + 1;
	excelFile.createCell(_workSheet_BS,_excelRow,1);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Category,_workSheet_BS,_excelRow,1);
	excelFile.createCell(_workSheet_BS,_excelRow,2);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Item,_workSheet_BS,_excelRow,2);
	excelFile.createCell(_workSheet_BS,_excelRow,3);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Time,_workSheet_BS,_excelRow,3);
	excelFile.createCell(_workSheet_BS,_excelRow,4);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Value,_workSheet_BS,_excelRow,4);
}
if (debugOn)				
	traceln("-----End writing whole "+ _workSheet + "and " + _workSheet_BS + ".");	
			

excelFile.writeFile();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297862818825</Id>
					<Name><![CDATA[doSaveDemand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_excelFileName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[String _workSheet =_myAgent.Name;
String _workSheet_BS =_myAgent.Name + "_BS";
excelFile.setFileName(_excelFileName);
excelFile.readFile();
 // Writing of transactions from  Incoming and Outgoing Order		
int headerLine = 1;
excelFile.createCell(_workSheet,headerLine,1);
excelFile.setCellValue("TYPE",_workSheet, headerLine,1);
excelFile.createCell(_workSheet,headerLine,2);
excelFile.setCellValue("ID",_workSheet,headerLine,2);
excelFile.createCell(_workSheet,headerLine,3);
excelFile.setCellValue("PRODUCT",_workSheet,headerLine,3);
excelFile.createCell(_workSheet,headerLine,4);
excelFile.setCellValue("QUANTITY",_workSheet,headerLine ,4);
excelFile.createCell(_workSheet,headerLine,5);
excelFile.setCellValue("SENDER",_workSheet,headerLine,5);
excelFile.createCell(_workSheet,headerLine,6);
excelFile.setCellValue("RECIPIENT",_workSheet,headerLine,6);
excelFile.createCell(_workSheet,headerLine,7);
excelFile.setCellValue("STATUS",_workSheet,headerLine,7);
excelFile.createCell(_workSheet,headerLine,8);
excelFile.setCellValue("TIME",_workSheet,headerLine,8);
if (debugOn)
	traceln("-----End writing Headers "+ _workSheet);
int excelRow;

for(int k = 0; k < _myAgent.outOrdList.getNumberAllOrders() ; k++){
	excelRow = headerLine + k + 1;
	excelFile.createCell(_workSheet,excelRow,1);
	excelFile.setCellValue("Outgoing",_workSheet,excelRow,1);
	excelFile.createCell(_workSheet,excelRow,2);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).orderID,_workSheet,excelRow,2);
	excelFile.createCell(_workSheet,excelRow,3);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).productName,_workSheet,excelRow,3);
	excelFile.createCell(_workSheet,excelRow,4);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).quantity,_workSheet,excelRow,4);
	excelFile.createCell(_workSheet,excelRow,5);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).sender,_workSheet,excelRow,5);
	excelFile.createCell(_workSheet,excelRow,6);
	excelFile.setCellValue(_myAgent.outOrdList.getAllOrder(k).recipient,_workSheet,excelRow,6);
	excelFile.createCell(_workSheet,excelRow,7);
	excelFile.setCellValue(_myAgent.outOrdList.getStatus(_myAgent.outOrdList.getAllOrder(k).orderID).status,_workSheet,excelRow,7);
	excelFile.createCell(_workSheet,excelRow,8);
	excelFile.setCellValue(_myAgent.outOrdList.getStatus(_myAgent.outOrdList.getAllOrder(k).orderID).recTime,_workSheet,excelRow,8);
}
		
	// Writing of BALANCESHEET 
int _headerLine = 1;
excelFile.createCell(_workSheet_BS,_headerLine,1);
excelFile.setCellValue("TRANSACTION CATEGORY",_workSheet_BS,_headerLine,1);
excelFile.createCell(_workSheet_BS,_headerLine,2);
excelFile.setCellValue("ITEM",_workSheet_BS,_headerLine,2);
excelFile.createCell(_workSheet_BS,_headerLine,3);
excelFile.setCellValue("TIME",_workSheet_BS,_headerLine,3);
excelFile.createCell(_workSheet_BS,headerLine,4);
excelFile.setCellValue("VALUE",_workSheet_BS,_headerLine ,4);
excelFile.createCell(_workSheet_BS,headerLine,5);
excelFile.setCellValue("TOTAL BALANCE",_workSheet_BS,_headerLine,5);

if (debugOn) {		
	traceln("-----End writing Headers "+ _workSheet_BS);
	traceln("Array Length of BALANCE SHEET " + _myAgent.balanceSheet.getNumberAllBS());		
}
if (_myAgent.balanceSheet.getNumberAllBS() > 0) {
	if (debugOn)
		traceln("Test Categorie " + _myAgent.balanceSheet.getAllBS(0).Category);
}
int _excelRow;
for(int _k = 0; _k < _myAgent.balanceSheet.getNumberAllBS(); _k++){
	excelFile.createCell(_workSheet_BS,2,5);
	excelFile.setCellValue(_myAgent.balanceSheet.getBalance(),_workSheet_BS,2,5);
	_excelRow = _headerLine + _k + 1;
	excelFile.createCell(_workSheet_BS,_excelRow,1);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Category,_workSheet_BS,_excelRow,1);
	excelFile.createCell(_workSheet_BS,_excelRow,2);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Item,_workSheet_BS,_excelRow,2);
	excelFile.createCell(_workSheet_BS,_excelRow,3);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Time,_workSheet_BS,_excelRow,3);
	excelFile.createCell(_workSheet_BS,_excelRow,4);
	excelFile.setCellValue(_myAgent.balanceSheet.getAllBS(_k).Value,_workSheet_BS,_excelRow,4);
}
if (debugOn)
	traceln("-----End writing whole "+ _workSheet + "and " + _workSheet_BS + ".");	
			

excelFile.writeFile();]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1296742642291</Id>
					<Name><![CDATA[OrderList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>300</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>100</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<Connectivity>
				<ExcelFile>
					<Id>1296742642297</Id>
					<Name><![CDATA[excelFile]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>420</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<FileName>Results_BB.xls</FileName>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>false</LoadOnStartup>
					<SaveOnDispose>false</SaveOnDispose>
				</ExcelFile>
				<ExcelFile>
					<Id>1296742642299</Id>
					<Name><![CDATA[excelFile_Parameters]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>540</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<FileName>Parameters_BB.xls</FileName>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>false</LoadOnStartup>
					<SaveOnDispose>false</SaveOnDispose>
				</ExcelFile>
			</Connectivity>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1297083964629</Id>
			<Name><![CDATA[Transport_Agent]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<Agent>true</Agent>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<OnReceive><![CDATA[receiveCaller(msg);]]></OnReceive>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1297854493371</Id>
					<Name><![CDATA[Name]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1298435561056</Id>
					<Name><![CDATA[delay]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1298435643297</Id>
					<Name><![CDATA[association]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>360</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1299237811140</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>380</X><Y>-110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299237811138</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1297083964696</Id>
					<Name><![CDATA[eventManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout><![CDATA[1]]></Timeout>
						<Rate><![CDATA[1]]></Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1293447931694</OccurrenceDate>												
						<OccurrenceTime><![CDATA[0]]></OccurrenceTime>												
						<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
						<Action><![CDATA[doEvent(this);]]></Action>
					</Properties>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297083964631</Id>
					<Name><![CDATA[forwardOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>60</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[Order]]></Type>
					</Parameter>
					<Body><![CDATA[// function to receive orders
// transfer the order directly to the next level 
this.send(msg, AgentContinuous2D.ALL_CONNECTED);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297083964633</Id>
					<Name><![CDATA[doEvent]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>270</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Transport_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[
// Basically calling the create Network function once would suffice
createNetwork();

for (Shipment s: inTransitStock.getShipmentsOfToday(time())) {
	for( AgentContinuous2D a : _myAgent.get_Main().Supply_Chain.getAgentCollection() ) {
		String _BBworksheetName = "";
		if (a instanceof Generic_agent) {
			Generic_agent b = (Generic_agent)a;
			if (b.Name.equals(s.destination)) {
				//traceln("Sende " + s + " to " + b.Name);
				this.send(s, b);
				break;
			}
		} else if (a instanceof Demand_Agent) {
			Demand_Agent b = (Demand_Agent)a;
			if (b.Name.equals(s.destination)) {
				//traceln("Sende " + s + " to " + b.Name);
				this.send(s, b);
				break;
			}
		} else if (a instanceof Transport_Agent) {
			Transport_Agent b = (Transport_Agent)a;
			if (b.Name.equals(s.destination)) {
				//traceln("Sende " + s + " to " + b.Name);
				this.send(s, b);
				break;
			}
		}

	}
	//this.send(s, AgentContinuous2D.ALL_CONNECTED);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297403075855</Id>
					<Name><![CDATA[receiveCaller]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>60</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_msg]]></Name>
						<Type><![CDATA[Object]]></Type>
					</Parameter>
					<Body><![CDATA[if (_msg instanceof Order) {
	if (debugOn)
		traceln("Transport forward Order");
	forwardOrder((Order)_msg);
	
} else if (_msg instanceof Shipment) {
	Shipment m = (Shipment)_msg;
	if (debugOn) {
		traceln("Transport added Shipment");
		traceln(m.toString());
		traceln("Now " + time() + " Delay " + delay);
	}
	// check if I am connected to both sides?
	boolean connectedSender = false;
	boolean connectedDestination = false;
	for( AgentContinuous2D a : this.getConnections() ) {
		String aName = "";
		if (a instanceof Generic_agent) {
			aName = ((Generic_agent)a).Name;
		} else if (a instanceof Demand_Agent) {
			aName = ((Demand_Agent)a).Name;
		} else if (a instanceof Transport_Agent) {
			aName = ((Transport_Agent)a).Name;
		}
		if (aName.equals(m.sender)) {
			connectedSender = true;
		} else if (aName.equals(m.destination)) {
			connectedDestination = true;
		}
	}
	if ((connectedSender) && (connectedDestination))
		inTransitStock.add(m,time() + delay);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1298435729792</Id>
					<Name><![CDATA[createNetwork]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>410</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// This function has to be moved to the Generic Agent and called by Event
// Right now selection only by price

//this.disconnectFromAll();
if (debugOn)
	traceln("Start Connection Procedure for " + Name);
// search new connections and disconnect old ones
if (debugOn)
	traceln("Association " + association);

for( AgentContinuous2D a : get_Main().Supply_Chain.getAgentCollection() ) {
	if (a instanceof Generic_agent) {
		Generic_agent b = (Generic_agent)a;
		if (b.Name.equals(association)) {
			this.connectTo(b);
			if (debugOn)
				traceln("Connecting to " + association);
		}
	}
}
]]></Body>
				</Function>
			</Functions>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1297083964688</Id>
					<Name><![CDATA[balanceSheet]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>220</X><Y>90</Y>
					<Label><X>-43</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[BalanceSheet]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297083964692</Id>
					<Name><![CDATA[risk]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>140</X><Y>90</Y>
					<Label><X>-14</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Risk]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297083964694</Id>
					<Name><![CDATA[excelInterface]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>270</X><Y>50</Y>
					<Label><X>-44</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ExcelInterface]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297085360762</Id>
					<Name><![CDATA[inTransitStock]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>70</X><Y>90</Y>
					<Label><X>-43</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ShipmentStock]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Shapes>
				<Group>
					<Id>1299054507471</Id>
					<Name><![CDATA[group1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>-3</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<ScaleXCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleXCode>
					<ScaleYCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleYCode>

			<Shapes>
				<Line>
					<Id>1297403207092</Id>
					<Name><![CDATA[line]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>3</X><Y>-2</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<ReplicationCode><![CDATA[getConnectionsNumber()]]></ReplicationCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[getConnectedAgent( index ).hashCode() > hashCode() ?new Color(113, 166, 89) : null]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DASHED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>60</Dx>
					<DxCode><![CDATA[getConnectedAgent( index ).getX() - getX()]]></DxCode>
					<Dy>-40</Dy>
					<DyCode><![CDATA[getConnectedAgent( index ).getY() - getY()]]></DyCode>
					<Dz>0</Dz>
				</Line>
				<Group>
					<Id>1297084057172</Id>
					<Name><![CDATA[lorry2]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>10</X><Y>0</Y>
					<Label><X>11</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Shapes>
				<Curve ControlPoints="true">
					<Id>1297084057174</Id>
					<Name><![CDATA[_ps97]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>11</X><Y>7</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-9741784</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>2</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>1</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-2</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1297084057176</Id>
					<Name><![CDATA[_ps98]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>11</X><Y>-8</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-9741784</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>2</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>3</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>1</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>-2</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1297084057178</Id>
					<Name><![CDATA[_ps99]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>4</X><Y>-7</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-10466256</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-1124995</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>14</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>14</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>14</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>14</Y><Z>0</Z></Point>
					   <Point><X>11</X><Y>14</Y><Z>0</Z></Point>
					   <Point><X>16</X><Y>14</Y><Z>0</Z></Point>
					   <Point><X>16</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>11</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1297084057187</Id>
					<Name><![CDATA[_ps100]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>9</X><Y>5</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-13421226</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-6</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-6</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-6</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-2</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<RoundedRectangle>
					<Id>1297084057189</Id>
					<Name><![CDATA[_ps101]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>5</X><Y>-6</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>3</Width>
					<Height>12</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-529720</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>1</ArcRadius>
				</RoundedRectangle>
				<Rectangle>
					<Id>1297084057203</Id>
					<Name><![CDATA[_ps102]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-21</X><Y>-8</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>16</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-4144960</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<RoundedRectangle>
					<Id>1297084057205</Id>
					<Name><![CDATA[_ps103]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-20</X><Y>-6</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>23</Width>
					<Height>12</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>1</ArcRadius>
				</RoundedRectangle>
			</Shapes>
				</Group>
				<Text>
					<Id>1298451717034</Id>
					<Name><![CDATA[text4]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-10</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16776961</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[Name]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Shapes>
				</Group>
			</Shapes>
		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1297084649940</Id>
			<Name><![CDATA[ShipmentStock]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299237876763</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>480</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299237876761</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297084649942</Id>
					<Name><![CDATA[stockData]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Shipment]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297084773965</Id>
					<Name><![CDATA[deliveryDate]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>500</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[ArrayList<Shipment>]]></ReturnType>
					<Id>1297084649944</Id>
					<Name><![CDATA[getShipmentsOfToday]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_time]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("get Shipments of Today");
ArrayList<Shipment> todaysShipments = new ArrayList<Shipment>();

for (int i = 0; i < deliveryDate.size(); i++) {
	double dd = deliveryDate.get(i);
	if (dd == _time) {
		todaysShipments.add(stockData.get(i));
		deliveryDate.remove(i);
		stockData.remove(i);		
	}
}

return todaysShipments;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297084649946</Id>
					<Name><![CDATA[add]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_shipment]]></Name>
						<Type><![CDATA[Shipment]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_deliveryTime]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("--- Start Add to ShipmentStock");

stockData.add(_shipment);
deliveryDate.add(_deliveryTime);
if (debugOn)
	traceln("--- End Add ShipmentStock");]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1297086643331</Id>
			<Name><![CDATA[Demand_Agent]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<Agent>true</Agent>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<OnReceive><![CDATA[receiveCaller(msg);]]></OnReceive>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1297854470373</Id>
					<Name><![CDATA[Name]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>260</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1298472238794</Id>
					<Name><![CDATA[unsatisfied]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>120</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299059044335</Id>
					<Name><![CDATA[partially]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>120</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299059292531</Id>
					<Name><![CDATA[fully]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>120</X><Y>-20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299069602624</Id>
					<Name><![CDATA[idle]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>115</X><Y>5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[true]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1305883556063</Id>
					<Name><![CDATA[Demand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1299237571020</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>270</X><Y>-60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299237571018</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1297086643389</Id>
					<Name><![CDATA[eventManagement]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>100</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout><![CDATA[1]]></Timeout>
						<Rate><![CDATA[1]]></Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1293447931694</OccurrenceDate>												
						<OccurrenceTime><![CDATA[0]]></OccurrenceTime>												
						<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
						<Action><![CDATA[doEvent(this);]]></Action>
					</Properties>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297086643335</Id>
					<Name><![CDATA[doEvent]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>110</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[idle=true;
unsatisfied= false;
partially= false;
fully= false;
_myAgent.disconnectFromAll();
demand_Quotes.quotePrices(_myAgent);
//while (!demand_Quotes.received_all_quotes){
//traceln( "waiting for all quotes");
//}
createNetwork();
inventoryManagement_Demand.doInventoryManagement(_myAgent);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297344402605</Id>
					<Name><![CDATA[receiveCaller]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>210</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[msg]]></Name>
						<Type><![CDATA[Object]]></Type>
					</Parameter>
					<Body><![CDATA[if (msg instanceof Shipment) {
	Shipment ship = (Shipment)msg;
	if (ship.destination.equals(this.Name)) {
		stock.add(ship.productName, ship.quantity, "NotReserved");
		//Order o = new Order();
		//o= (this.outOrdList.getOrder(ship.orderID).quantity;
		if (ship.quantity == 0){
		this.unsatisfied=true;
		this.idle=false;
		//this.inactive= false;
		} else if (ship.quantity==(this.outOrdList.getOrder(ship.orderID).quantity)){
		this.fully=true;
		this.idle= false;
		}
		else { this.partially=true;
		this.idle= false;
		}
	}
} else if (msg instanceof Quote ) {
	if((this.Name.equals(((Quote)msg).querier))&& (((Quote)msg).price != -1)){
		demand_Quotes.receiveQuotes(this,(Quote) msg);
		if (debugOn)
			traceln("@@@@"+  this.Name + " received a quote for " + ((Quote)msg).product + ".");
	} else {
		// Do nothing, because we do not answer to quote requests
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297922025184</Id>
					<Name><![CDATA[createNetwork]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
if (debugOn)
	traceln("Start Conncection Procedure for " + Name);
// search new connections and disconnect old ones
for (String product: inventoryManagement_Demand.demandProducts) {
	for ( String agent_name : demand_Quotes.getSuppliers(product)) {
	 //String agent_name = demand_Quotes.getCheapest(product);
		for( AgentContinuous2D a : get_Main().Supply_Chain.getAgentCollection() ) {
			if (a instanceof Generic_agent) {
				Generic_agent b = (Generic_agent)a;
				if (b.Name.equals(agent_name)) {
					this.connectTo(b);
					if (debugOn)
						traceln("Connecting to " + b.Name);
				}
			}
		}
	}
}
]]></Body>
				</Function>
			</Functions>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1297086643373</Id>
					<Name><![CDATA[outOrdList]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>190</X><Y>150</Y>
					<Label><X>-36</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[OutOrdList]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297086643381</Id>
					<Name><![CDATA[balanceSheet]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>190</X><Y>200</Y>
					<Label><X>-43</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[BalanceSheet]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297086643383</Id>
					<Name><![CDATA[inventoryManagement_Demand]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>120</X><Y>250</Y>
					<Label><X>-100</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[InventoryManagement_Demand]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[demandedQty]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
						<Parameter>
							<Name><![CDATA[changeInDemand]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297086643385</Id>
					<Name><![CDATA[risk]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>120</X><Y>200</Y>
					<Label><X>-14</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Risk]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297086643387</Id>
					<Name><![CDATA[excelInterface]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>260</X><Y>150</Y>
					<Label><X>-44</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[ExcelInterface]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1297086843153</Id>
					<Name><![CDATA[stock]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>260</X><Y>200</Y>
					<Label><X>-17</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Stock]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[debugOn]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1305900836425</Id>
					<Name><![CDATA[demand_Quotes]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>240</Y>
					<Label><X>-52</X><Y>-21</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[supplychain_ComplexityVersion]]></PackageName>
						<ClassName><![CDATA[Demand_Quotes]]></ClassName>
					</ActiveObjectClass>
					<GenericParametersSubstitute><![CDATA[]]></GenericParametersSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[debugOn]]></Name>
							<Value><![CDATA[]]></Value>	
						</Parameter>
					</Parameters>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Shapes>
				<Group>
					<Id>1299072637123</Id>
					<Name><![CDATA[group1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>20</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<ScaleXCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleXCode>
					<ScaleYCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleYCode>

				</Group>
				<Line>
					<Id>1297333941988</Id>
					<Name><![CDATA[line]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>-5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<ReplicationCode><![CDATA[getConnectionsNumber()]]></ReplicationCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[getConnectedAgent( index ).hashCode() > hashCode() ?new Color(113, 166, 89) : null]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>60</Dx>
					<DxCode><![CDATA[getConnectedAgent( index ).getX() - getX()]]></DxCode>
					<Dy>-40</Dy>
					<DyCode><![CDATA[getConnectedAgent( index ).getY() - getY()]]></DyCode>
					<Dz>0</Dz>
				</Line>
				<Group>
					<Id>1299022934750</Id>
					<Name><![CDATA[group]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>10</X><Y>-12</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<ScaleXCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleXCode>
					<ScaleYCode><![CDATA[this.get_Main().zoom_visualization]]></ScaleYCode>

				</Group>
				<Group>
					<Id>1297854247657</Id>
					<Name><![CDATA[store]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>-2</Y>
					<Label><X>25</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

				</Group>
				<Text>
					<Id>1298451618606</Id>
					<Name><![CDATA[text4]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-30</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16776961</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[Name]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Polyline>
					<Id>1297854247659</Id>
					<Name><![CDATA[_ps268]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>1342177280</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>41</X><Y>-10</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1297854247661</Id>
					<Name><![CDATA[_ps269]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>8</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-7876885</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-30</Y><Z>0</Z></Point>
					   <Point><X>-30</X><Y>-15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1297854247663</Id>
					<Name><![CDATA[_ps270]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-30</X><Y>13</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-10185235</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1297854247665</Id>
					<Name><![CDATA[_ps271]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-12490271</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-20</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299058898911</Id>
					<Name><![CDATA[Yellow]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-25</X><Y>15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[partially]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-256</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>13</Y><Z>0</Z></Point>
					   <Point><X>39</X><Y>6</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299059309691</Id>
					<Name><![CDATA[green]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-25</X><Y>15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[fully]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16711936</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>13</Y><Z>0</Z></Point>
					   <Point><X>39</X><Y>6</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299068957824</Id>
					<Name><![CDATA[green1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-25</X><Y>15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[unsatisfied]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-65536</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>13</Y><Z>0</Z></Point>
					   <Point><X>39</X><Y>6</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1297854247673</Id>
					<Name><![CDATA[_ps275]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>28</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-14667264</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-15</Y><Z>0</Z></Point>
					   <Point><X>30</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-50</Y><Z>0</Z></Point>
					   <Point><X>-30</X><Y>-35</Y><Z>0</Z></Point>
					   <Point><X>-30</X><Y>-15</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1299069556961</Id>
					<Name><![CDATA[inactive]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-25</X><Y>15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<VisibleCode><![CDATA[idle]]></VisibleCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>13</Y><Z>0</Z></Point>
					   <Point><X>39</X><Y>6</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>51</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>25</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Line>
					<Id>1297854247669</Id>
					<Name><![CDATA[_ps273]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>5</X><Y>26</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-12490271</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>-15</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1297854247671</Id>
					<Name><![CDATA[_ps274]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>-5</X><Y>26</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-10185235</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>-15</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1298283743872</Id>
					<Name><![CDATA[text3]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>0</X><Y>-21</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[value]]></Text>
					<TextCode><![CDATA[Demand]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Shapes>
			<Controls>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1297273870010</Id>
					<Name><![CDATA[DemandSlider]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>32</X><Y>-20</Y>
					<Label><X>10</X><Y>-60</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="25" Height="60" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[10]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>inventoryManagement_Demand.changeInDemand</Link>
					</ExtendedProperties>
				</Control>
			</Controls>
		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1297788323994</Id>
			<Name><![CDATA[Sales]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236947171</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>320</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236947169</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297864558259</Id>
					<Name><![CDATA[quotePrice]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>320</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("Start Sales price quoting");
if (_myAgent.listOfBOM.iProduce(_quote.product)) {
	Quote myQuote = new Quote(_myAgent.Name);
	myQuote.querier = _quote.querier;
	myQuote.product = _quote.product;
	myQuote.price = _myAgent.priceList.getPriceOf(_quote.product);
	myQuote.capacity = _myAgent.productionManagement.getPCAvailable(_quote.product);
	//traceln("__________________________________________________________________________________________________________");
	if (debugOn)
		traceln("Quote price " + myQuote.price + " for " + myQuote.product + " by "+ _myAgent.Name+ " to " + myQuote.querier );
	myQuote.quoter = _myAgent.Name;
	_myAgent.get_Main().Supply_Chain.deliverToAll(myQuote);
}

/*for( AgentContinuous2D a : _myAgent.get_Main().Supply_Chain.getAgentCollection() ) {
	if (a instanceof Generic_agent) {
		Generic_agent b = (Generic_agent)a;
		traceln("Loop: Current Agent " + b.Name + " Querier " + _quote.querier);
		if (b.Name.equals(_quote.querier)) {
			_myAgent.send(_quote, b);
			traceln("Sent quote");
		}
	}
}*/]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1297788310346</Id>
			<Name><![CDATA[Purchasing]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299236071203</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299236071201</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297849208677</Id>
					<Name><![CDATA[productName]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297849210666</Id>
					<Name><![CDATA[distance]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297849212827</Id>
					<Name><![CDATA[priceQuoted]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297849215885</Id>
					<Name><![CDATA[speed]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297849232750</Id>
					<Name><![CDATA[agentName]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305641578925</Id>
					<Name><![CDATA[capacitySupplier]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297788342774</Id>
					<Name><![CDATA[quotePrices]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Body><![CDATA[// Send out Query
clearAll();
for (String material: _myAgent.listOfBOM.getInputs()) {
	Quote msg = new Quote (_myAgent.Name);
	msg.product = material;
	//for( Agent a : _myAgent.get_Main().Supply_Chain.getAgentCollection() ){
		_myAgent.get_Main().Supply_Chain.deliverToAll(msg);
		
		//}
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297788453193</Id>
					<Name><![CDATA[receiveQuotes]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[int generic_agents = _myAgent.get_Main().agent.size();
int agent_name = agentName.size();
int number_inputs = _myAgent.listOfBOM.getInputs().size();
int quotesExpecting = agent_name * number_inputs;

addQuote(_quote);
 
 
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297849480905</Id>
					<Name><![CDATA[clearAll]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//_myAgent.disconnectFromAll();
agentName.clear();
productName.clear();
distance.clear();
priceQuoted.clear();
speed.clear();
capacitySupplier.clear();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297849487937</Id>
					<Name><![CDATA[addQuote]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("Add Quote " + _quote.toString());
agentName.add(_quote.quoter);
productName.add(_quote.product);
priceQuoted.add(_quote.price);
distance.add (_quote.distance);
speed.add(_quote.time);
capacitySupplier.add(_quote.capacity);
	


	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1297849502697</Id>
					<Name><![CDATA[getClosest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_distance = 9999999;
for (int i = 0; i < distance.size(); i++) {
	if (_productName.equals(productName.get(i))) {
		if (distance.get(i) < min_distance ) {
			min_distance = distance.get(i);
			found_index = i;
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1297849510170</Id>
					<Name><![CDATA[getCheapest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_price = 9999999;
for (int i = 0; i < priceQuoted.size(); i++) {
	if (debugOn)
		traceln("*******" + i + " " + _productName + " " + productName.get(i));
	if (_productName.equals(productName.get(i))) {
		if (debugOn)
			traceln("Product Found. Price " + priceQuoted.get(i));
		if ((priceQuoted.get(i) < min_price ) && (priceQuoted.get(i) >= 0)) {
			min_price = priceQuoted.get(i);
			found_index = i;
			if (debugOn)
				traceln("Found " + min_price + " Index " + i);
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1297849517698</Id>
					<Name><![CDATA[getFastest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_speed = 0;
for (int i = 0; i < speed.size(); i++) {
	if (_productName.equals(productName.get(i))) {
		if (priceQuoted.get(i) < min_speed ) {
			min_speed = speed.get(i);
			found_index = i;
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1305637733794</Id>
					<Name><![CDATA[get2ndCheapest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_price = 9999999;
String firstCheapest= getCheapest(_productName);
//traceln (firstCheapest);
/*This will makes negative  the 1st cheapest at least until the next round it ask for prices.

for (int i=0; i <agentName.size(); i++){
	if(firstCheapest.equals(agentName.get(i))){
	priceQuoted.add (i,priceQuoted.get(i)*-1);
	}
}
*/

// looks for the new cheapest none negative and different from the first cheapest without loosing the cheapest

for (int i = 0; i < priceQuoted.size(); i++) {
	if (debugOn)
		traceln("*******" + i + " " + _productName + " " + productName.get(i));
	if (_productName.equals(productName.get(i))) {
		if (debugOn)
			traceln("Product Found. Price " + priceQuoted.get(i));
			//includes the condition for ignoring the first cheapest
		if (!firstCheapest.equals(agentName.get(i))){	
			if ((priceQuoted.get(i) < min_price ) && (priceQuoted.get(i) >= 0)) {
				min_price = priceQuoted.get(i);
				found_index = i;
				if (debugOn)
					traceln("Found 2nd " + min_price + " Index " + i);
			}
		}	
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305640943267</Id>
					<Name><![CDATA[splitOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_orderQuantity]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[
_productName="";

_orderQuantity=0;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1305646220124</Id>
					<Name><![CDATA[checkMultipleSource]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[boolean multipleSource=false;
int j= 0;
String Name = _productName;

for ( int i=0; i<productName.size(); i++) {
	 if (Name.equals(productName.get(i))){
	//	if(priceQuoted.get(i)!=-1){
		 j++;
	//	 }
	}
}

if(j>1)
multipleSource = true; 

return multipleSource;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305650393757</Id>
					<Name><![CDATA[applyPolicy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_orderQuantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[String supplier1 = getCheapest(_product);
//traceln ("El mas barato es : " + supplier1);
String supplier2="";
boolean multi = checkMultipleSource(_product);
//traceln( "MultiSoursing es : " + multi + " de: "+ _product);
double _orderQuantitySupplier1= 0.0;
double _orderQuantitySupplier2= 0.0;
if (multi){
	supplier2 = get2ndCheapest(_product);
	_orderQuantitySupplier1=  2*_orderQuantity/3;
	_orderQuantitySupplier2=  _orderQuantity/3;
//traceln ("I split "+ _product+ " : " + _myAgent.Name + " "+ _orderQuantity + " : " + supplier1 + " : "+ _orderQuantitySupplier1 +" and " +supplier2+ " : " + _orderQuantitySupplier2);
	Order o = new Order(_myAgent);
			o.productName = _product;
			o.quantity =  _orderQuantitySupplier1;
			o.recipient= supplier1;
			 if (debugOn)
				traceln("Sende Order");
			_myAgent.outOrdList.add(o);		
			if (debugOn) {
				traceln(o);
				traceln("Connection Number "+ _myAgent.getConnectionsNumber());
			}
			_myAgent.send(o, AgentContinuous2D.ALL_CONNECTED);
			
	Order p = new Order(_myAgent);
			p.productName = _product;
			p.quantity =  _orderQuantitySupplier2;
			p.recipient= supplier2;
			 if (debugOn)
				traceln("Sende Order");
			_myAgent.outOrdList.add(p);		
			if (debugOn) {
				traceln(p);
				traceln("Connection Number "+ _myAgent.getConnectionsNumber());
			}
			_myAgent.send(p, AgentContinuous2D.ALL_CONNECTED);
}		

else {
	//traceln ( " I am " + _myAgent.Name + " unique supplier " + _orderQuantity + " of " + _product); 
	Order q = new Order(_myAgent);
		q.productName = _product;
		q.quantity = _orderQuantity;
		q.recipient= supplier1;
		 if (debugOn)
			traceln("Sende Order");
		_myAgent.outOrdList.add(q);		
		if (debugOn) {
			traceln(q);
			traceln("Connection Number "+ _myAgent.getConnectionsNumber());
		}
		_myAgent.send(q, AgentContinuous2D.ALL_CONNECTED);
		
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[ArrayList<String>]]></ReturnType>
					<Id>1305821836316</Id>
					<Name><![CDATA[getSuppliers]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[
ArrayList<String> tmp = new ArrayList<String>();

String Name = _productName;

for ( int i=0; i<productName.size(); i++) {
	 if (Name.equals(productName.get(i))){
		tmp.add(agentName.get(i));
	}
}

return tmp;



/*
int i=0;
for (double _priceQuoted: priceQuoted){
//for (int i = 0; i < priceQuoted.size(); i++) {
	 if (_priceQuoted!=-1){
		 if (_product.equals(productName.get(i))){
		 tmp.add(agentName.get(i));
		 //traceln (tmp);
		}
	}	
i++;
}

return tmp; 
*/]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1297922749784</Id>
			<Name><![CDATA[Demand_Quotes1]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="PlainVariable">
					<Id>1299155780998</Id>
					<Name><![CDATA[received_all_quotes]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>250</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1299237981431</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>530</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299237981429</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297922749786</Id>
					<Name><![CDATA[productName]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>370</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297922749788</Id>
					<Name><![CDATA[distance]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>490</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297922749790</Id>
					<Name><![CDATA[priceQuoted]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>610</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297922749792</Id>
					<Name><![CDATA[speed]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>730</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1297922749794</Id>
					<Name><![CDATA[agentName]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297922749796</Id>
					<Name><![CDATA[quotePrices]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[
// Send out Query
clearAll();
for (String material: _myAgent.inventoryManagement_Demand.demandProducts) {
	Quote msg = new Quote (_myAgent.Name);
	msg.product = material;
	if (debugOn)
		traceln(_myAgent.Name + " will send quote request to all " + msg.toString());
	_myAgent.get_Main().Supply_Chain.deliverToAll(msg);
	if (debugOn)
		traceln(_myAgent.Name + " sent quote request to all " + msg.toString());
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297922749798</Id>
					<Name><![CDATA[receiveQuotes]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[int generic_agents = _myAgent.get_Main().agent.size();
int agent_name = agentName.size();
int number_inputs = _myAgent.inventoryManagement_Demand.demandProducts.size();
int quotesExpecting = agent_name * number_inputs;
//if (quotesExpecting <= generic_agents) {
	addQuote(_quote);
/*} else  {
	traceln ("Nomore Price quotes are exptected in this round of requests at time: "+ time());
	if (quotesExpecting==productName.size()){
		this.received_all_quotes=true;
	} 

}
 */
 
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297922749800</Id>
					<Name><![CDATA[clearAll]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[agentName.clear();
productName.clear();
distance.clear();
priceQuoted.clear();
speed.clear();
received_all_quotes=false;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1297922749802</Id>
					<Name><![CDATA[addQuote]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[agentName.add(_quote.quoter);
productName.add(_quote.product);
priceQuoted.add(_quote.price);
distance.add (_quote.distance);
speed.add(_quote.time);
	


	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1297922749804</Id>
					<Name><![CDATA[getClosest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_distance = 9999999;
for (int i = 0; i < distance.size(); i++) {
	if (_productName.equals(productName.get(i))) {
		if (distance.get(i) < min_distance ) {
			min_distance = distance.get(i);
			found_index = i;
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1297922749806</Id>
					<Name><![CDATA[getCheapest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_price = 9999999;
for (int i = 0; i < priceQuoted.size(); i++) {
	if (debugOn)
		traceln(i + " " + _productName + " " + productName.get(i) + " Quoted Price " + priceQuoted.get(i) + " from " + agentName.get(i));
	if (_productName.equals(productName.get(i))) {
		if ((priceQuoted.get(i) < min_price ) && (priceQuoted.get(i) >= 0)) {
			min_price = priceQuoted.get(i);
			found_index = i;
			if (debugOn)
				traceln("Found " + min_price + " Index " + i);
		}
	}
}
String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1297922749808</Id>
					<Name><![CDATA[getFastest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_speed = 0;
for (int i = 0; i < speed.size(); i++) {
	if (_productName.equals(productName.get(i))) {
		if (priceQuoted.get(i) < min_speed ) {
			min_speed = speed.get(i);
			found_index = i;
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1299242998522</Id>
			<Name><![CDATA[Receive_backlog]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1299242998527</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>460</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1299242998525</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1299242998524</Id>
					<Name><![CDATA[onReceiveOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>470</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Generic_agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_order]]></Name>
						<Type><![CDATA[Order]]></Type>
					</Parameter>
					<Body><![CDATA[

if (debugOn)
	traceln("--- Start Receive " + _myAgent.Name);
if (_myAgent.listOfBOM.iProduce(_order.productName)){
	// Add order to incoming order list only if it could be quoted as a output product
	_myAgent.incOrdList.add(_order);
	double qtForDel = 0.0;
	// check finished inventory levels
	//this.addTotal(_order.productName,_order.quantity);
	if (_order.quantity <= _myAgent.stock.getInventory(_order.productName, time(), "NotReserved")) {
		qtForDel = _order.quantity;
		_myAgent.incOrdList.statusChange(_order.orderID,qtForDel, "FullDeliveryScheduled", time());
		_myAgent.fully=true;
		
	} else if (Math.floor(_myAgent.stock.getInventory(_order.productName, time(), "NotReserved")) > 0) {
		qtForDel = _myAgent.stock.getInventory(_order.productName, time(), "NotReserved");
		_myAgent.incOrdList.statusChange(_order.orderID, qtForDel, "PartialDeliveryScheduled" , time());
		//_myAgent.incOrdList.statusChange(_order.orderID,  "PartialDeliveryScheduled" + Double.toString(_order.quantity - _myAgent.stock.getInventory(_order.productName, time(), "NotReserved")), time());
		_myAgent.partially=true;
	} else {
		//_myAgent.incOrdList.statusChange(_order.orderID, _order.quantity, "NoDeliveryScheduled:" , time());
		//this.addsatisfied(_order.productName,_order.quantity*-1);
		if (debugOn)
			traceln("Not avalilable in Stock - cannot deliver " + _order.orderID);
		_myAgent.none=true;
	}
	if (qtForDel > 0.0) {
		if (debugOn)
			traceln("From receive call delivery");
		_myAgent.delivery.deliver(_myAgent, _order.orderID, qtForDel);
		//this.addsatisfied(_order.productName,_order.quantity - _myAgent.stock.getInventory(_order.productName, time(), "NotReserved"));
	} else {
		_myAgent.incOrdList.statusChange(_order.orderID, _order.quantity, "NoDeliveryScheduled" , time());
		_myAgent.delivery.deliver(_myAgent, _order.orderID, 0);
	}
}else {
if (debugOn)
	traceln( "*** " + this.getFullName().toString().substring(5)+ " cant quote: " + _order.productName + "because it does not produce it");
}
// discriminate three cases: no inventory, not sufficient inventory, enough inventory. 
// Enough inventory, not sufficient inventory: kick off delivery by calling Object Delivery.deliver with orderID and number of Products
// No inventory: Mark order as completed and do nothing (no order backlog)
]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1305708988861</Id>
			<Name><![CDATA[SupplierPerformance]]></Name>
			<Description><![CDATA[Keeps track of supplier performance related info.
]]></Description> 
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>


		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1305900813460</Id>
			<Name><![CDATA[Demand_Quotes]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Variables>
				<Variable Class="Parameter">
					<Id>1305900813499</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>450</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Dynamic="false">
						<Type><![CDATA[boolean]]></Type>        
						<DefaultValue><![CDATA[]]></DefaultValue>
						<ParameterEditor>
							<Id>1305900813497</Id>
							<Name><![CDATA[]]></Name>
							<ExcludeFromBuild>false</ExcludeFromBuild>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<Separator>false</Separator>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305900813462</Id>
					<Name><![CDATA[productName]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305900813464</Id>
					<Name><![CDATA[distance]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305900813466</Id>
					<Name><![CDATA[priceQuoted]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305900813468</Id>
					<Name><![CDATA[speed]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305900813470</Id>
					<Name><![CDATA[agentName]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1305900813472</Id>
					<Name><![CDATA[capacitySupplier]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[java.util.ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305900813476</Id>
					<Name><![CDATA[receiveQuotes]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>190</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[/*int generic_agents = _myAgent.get_Main().agent.size();
int agent_name = agentName.size();
int number_inputs = _myAgent.listOfBOM.getInputs().size();
int quotesExpecting = agent_name * number_inputs;
*/
addQuote(_quote);
 
 
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305900813478</Id>
					<Name><![CDATA[clearAll]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//_myAgent.disconnectFromAll();
agentName.clear();
productName.clear();
distance.clear();
priceQuoted.clear();
speed.clear();
capacitySupplier.clear();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305900813480</Id>
					<Name><![CDATA[addQuote]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_quote]]></Name>
						<Type><![CDATA[Quote]]></Type>
					</Parameter>
					<Body><![CDATA[if (debugOn)
	traceln("Add Quote " + _quote.toString());
agentName.add(_quote.quoter);
productName.add(_quote.product);
priceQuoted.add(_quote.price);
distance.add (_quote.distance);
speed.add(_quote.time);
capacitySupplier.add(_quote.capacity);
	


	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1305900813482</Id>
					<Name><![CDATA[getClosest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_distance = 9999999;
for (int i = 0; i < distance.size(); i++) {
	if (_productName.equals(productName.get(i))) {
		if (distance.get(i) < min_distance ) {
			min_distance = distance.get(i);
			found_index = i;
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1305900813484</Id>
					<Name><![CDATA[getCheapest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_price = 9999999;
for (int i = 0; i < priceQuoted.size(); i++) {
	if (debugOn)
		traceln("*******" + i + " " + _productName + " " + productName.get(i));
	if (_productName.equals(productName.get(i))) {
		if (debugOn)
			traceln("Product Found. Price " + priceQuoted.get(i));
		if ((priceQuoted.get(i) < min_price ) && (priceQuoted.get(i) >= 0)) {
			min_price = priceQuoted.get(i);
			found_index = i;
			if (debugOn)
				traceln("Found " + min_price + " Index " + i);
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1305900813486</Id>
					<Name><![CDATA[getFastest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>830</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_speed = 0;
for (int i = 0; i < speed.size(); i++) {
	if (_productName.equals(productName.get(i))) {
		if (priceQuoted.get(i) < min_speed ) {
			min_speed = speed.get(i);
			found_index = i;
		}
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;

	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1305900813488</Id>
					<Name><![CDATA[get2ndCheapest]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[int found_index = -1;
double min_price = 9999999;
String firstCheapest= getCheapest(_productName);

/*This will makes negative  the 1st cheapest at least until the next round it ask for prices.

for (int i=0; i <agentName.size(); i++){
	if(firstCheapest.equals(agentName.get(i))){
	priceQuoted.add (i,priceQuoted.get(i)*-1);
	}
}
*/

// looks for the new cheapest none negative and different from the first cheapest without loosing the cheapest

for (int i = 0; i < priceQuoted.size(); i++) {
	if (debugOn)
		traceln("*******" + i + " " + _productName + " " + productName.get(i));
	if (_productName.equals(productName.get(i))) {
		if (debugOn)
			traceln("Product Found. Price " + priceQuoted.get(i));
			//includes the condition for ignoring the first cheapest
		if (!firstCheapest.equals(agentName.get(i))){	
			if ((priceQuoted.get(i) < min_price ) && (priceQuoted.get(i) >= 0)) {
				min_price = priceQuoted.get(i);
				found_index = i;
				if (debugOn)
					traceln("Found 2nd " + min_price + " Index " + i);
			}
		}	
	}
}

String agent_name = "";
if (found_index != -1) {
	agent_name = agentName.get(found_index);
}
return agent_name;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305900813490</Id>
					<Name><![CDATA[splitOrder]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_orderQuantity]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[
_productName="";

_orderQuantity=0;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1305900813492</Id>
					<Name><![CDATA[checkMultipleSource]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_productName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[boolean multipleSource=false;
int j= 0;
String Name = _productName;

for ( int i=0; i<productName.size(); i++) {
	 if (Name.equals(productName.get(i))){
		if(priceQuoted.get(i)!=-1){
		 j++;
		 }
	}
}

if(j>1)
multipleSource = true; 

return multipleSource;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305900813494</Id>
					<Name><![CDATA[applyPolicy]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[_orderQuantity]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[String supplier1 = getCheapest(_product);

boolean multi = checkMultipleSource(_product); 
double _orderQuantitySupplier1= 0.0;
double _orderQuantitySupplier2= 0.0;

if (multi){
	String supplier2 = get2ndCheapest(_product);
	_orderQuantitySupplier1= _orderQuantity/3;
	_orderQuantitySupplier2= (2*_orderQuantity)/3;
	//traceln ("I am " + _myAgent + " "+ _orderQuantity + " " + _orderQuantitySupplier1 +" " + " " + _orderQuantitySupplier2);
	Order o = new Order(_myAgent);
			o.productName = _product;
			o.quantity = _orderQuantitySupplier1;
			o.recipient= supplier1;
			 if (debugOn)
				traceln("Sende Order");
			_myAgent.outOrdList.add(o);		
			if (debugOn) {
				traceln(o);
				traceln("Connection Number "+ _myAgent.getConnectionsNumber());
			}
			_myAgent.send(o, AgentContinuous2D.ALL_CONNECTED);
			
	Order p = new Order(_myAgent);
			p.productName = _product;
			p.quantity = _orderQuantitySupplier2;
			p.recipient= supplier2;
			 if (debugOn)
				traceln("Sende Order");
			_myAgent.outOrdList.add(p);		
			if (debugOn) {
				traceln(p);
				traceln("Connection Number "+ _myAgent.getConnectionsNumber());
			}
			_myAgent.send(p, AgentContinuous2D.ALL_CONNECTED);
}		

else {
	Order q = new Order(_myAgent);
		q.productName = _product;
		q.quantity = _orderQuantity;
		q.recipient= supplier1;
		 if (debugOn)
			traceln("Sende Order");
		_myAgent.outOrdList.add(q);		
		if (debugOn) {
			traceln(q);
			traceln("Connection Number "+ _myAgent.getConnectionsNumber());
		}
		_myAgent.send(q, AgentContinuous2D.ALL_CONNECTED);
		
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[ArrayList<String>]]></ReturnType>
					<Id>1305900813496</Id>
					<Name><![CDATA[getSuppliers]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>1000</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_product]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[
ArrayList<String> tmp = new ArrayList<String>();

for (int i = 0; i < priceQuoted.size(); i++) {
	 if (priceQuoted.get(i)!=-1){
		 if (_product.equals(productName.get(i))){
		 tmp.add(agentName.get(i));
		}
	}	
}

return tmp;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1305900911315</Id>
					<Name><![CDATA[quotePrices]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>170</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_myAgent]]></Name>
						<Type><![CDATA[Demand_Agent]]></Type>
					</Parameter>
					<Body><![CDATA[
// Send out Query
clearAll();
for (String material: _myAgent.inventoryManagement_Demand.demandProducts) {
	Quote msg = new Quote (_myAgent.Name);
	msg.product = material;
	if (debugOn)
		traceln(_myAgent.Name + " will send quote request to all " + msg.toString());
	_myAgent.get_Main().Supply_Chain.deliverToAll(msg);
	if (debugOn)
		traceln(_myAgent.Name + " sent quote request to all " + msg.toString());
}

]]></Body>
				</Function>
			</Functions>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1310980991528</Id>
			<Name><![CDATA[TraceView]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Generic>false</Generic>
			<GenericParameters><![CDATA[T]]></GenericParameters>
			<GenericParametersLabel><![CDATA[Generic parameters:]]></GenericParametersLabel>
			<SamplesToKeep>100</SamplesToKeep>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
			</AgentProperties>

			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
				<RecurrenceCode><![CDATA[1]]></RecurrenceCode>
			</DatasetsCreationProperties>

			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1310981002165</Id>
					<Name><![CDATA[AddCheckBox]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>60</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[x]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[y]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[w]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[h]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[caption]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[Presentable p = this;
Color c1 = new Color(255,255,255);
Color c2 = new Color(0,0,0);
Font f   = new Font("Dialog",1,12);
ShapeCheckBox b = new ShapeCheckBox(p,true,x,y,w,h,c1,c2,f,caption);
b.setVisible(true);
b.setSelected(true);
presentation.add(b);]]></Body>
				</Function>
			</Functions>

			<Shapes>
				<RoundedRectangle>
					<Id>1310981280354</Id>
					<Name><![CDATA[roundRectangle_class]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>20</X><Y>50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>80</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<RoundedRectangle>
					<Id>1310981290311</Id>
					<Name><![CDATA[roundRectangle_obj]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>120</X><Y>50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>80</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
			</Shapes>
		</ActiveObjectClass>
	</ActiveObjectClasses>
	<Experiments>	
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1291972726905">
			<Id>1296738068422</Id>
			<Name><![CDATA[Simulation]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<PresentationTopGroupPersistent>true</PresentationTopGroupPersistent>
			<IconTopGroupPersistent>true</IconTopGroupPersistent>
			<Frame>
				<X>0</X>
				<Y>0</Y>
				<Width>1050</Width>
				<Height>950</Height>
				<Maximized>false</Maximized>
				<CloseConfirmation>false</CloseConfirmation>
			</Frame>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>1024</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<AfterSimulationRunCode><![CDATA[//get_Main().excelInterface.doSave();]]></AfterSimulationRunCode>
			<SeedValue>1</SeedValue>
			<RandomSelectionModeForSimultaneousEvents>false</RandomSelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<AbsoluteAccuracy>1.0E-5</AbsoluteAccuracy>
			<RelativeAccuracy>1.0E-5</RelativeAccuracy>
			<TimeAccuracy>1.0E-5</TimeAccuracy>
			<FixedTimeStep>0.0010</FixedTimeStep>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>
			<SnapshotFile></SnapshotFile>
			<DiffEquationsNumericalMethod>EULER</DiffEquationsNumericalMethod>
			<MixedEquationsNumericalMethod>RK45_NEWTON</MixedEquationsNumericalMethod>
			<AlgebraicEquationsNumericalMethod>MODIFIED_NEWTON</AlgebraicEquationsNumericalMethod>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1298056692153</Id>
					<Name><![CDATA[excel_file_parameters]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>50</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue><![CDATA[initPath()]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299233441717</Id>
					<Name><![CDATA[guiOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>280</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[true]]></InitialValue>                 	
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1299242769475</Id>
					<Name><![CDATA[debugOn]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue><![CDATA[false]]></InitialValue>                 	
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1299238429136</Id>
					<Name><![CDATA[initPath]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>440</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//f.setFile("configuration.txt", TextFile.READ);
String datei = "";
try {
	f.setFile("configuration.txt", TextFile.READ);
	datei = f.readLine();
} catch (java.lang.IllegalArgumentException e){
	datei = "";
}
return datei;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1299239603596</Id>
					<Name><![CDATA[savePath]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>440</X><Y>-30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[_datei]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[f.setFile("configuration.txt", TextFile.WRITE);
f.println(_datei);
f.close();]]></Body>
				</Function>
			</Functions>
			<Connectivity>
				<TextFile>
					<Id>1299238655784</Id>
					<Name><![CDATA[f]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>390</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<FileType>FILE</FileType>
					<FileName>"configuration.txt"</FileName>
					<FileMode>WRITE_APPEND</FileMode>
					<CharsetName>null</CharsetName>
					<Separators></Separators>
				</TextFile>
			</Connectivity>

			<Shapes>
				<RoundedRectangle>
					<Id>1296738068430</Id>
					<Name><![CDATA[roundRectangle1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>20</X><Y>10</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>0</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DASHED</LineStyle>
					<Width>900</Width>
					<Height>530</Height>
					<Rotation>0.0</Rotation>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1296738068432</Id>
					<Name><![CDATA[image1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>780</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Width>120</Width>
					<Height>40</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageFile><![CDATA[logo.png]]></ImageFile>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Image>
					<Id>1296738068434</Id>
					<Name><![CDATA[image2]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>40</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Width>190</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageFile><![CDATA[SCBB_LOGO.png]]></ImageFile>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1296738068437</Id>
					<Name><![CDATA[text1]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777088</Color>
					<Text><![CDATA[STRATEGIC  SUPPLY CHAIN MODELING AND SIMULATION
]]></Text>
					<Font>
						<Name>Verdana</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1296738068439</Id>
					<Name><![CDATA[text7]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>370</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[AGENT BASED PLATFORM]]></Text>
					<Font>
						<Name>Verdana</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1296738068441</Id>
					<Name><![CDATA[text]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>240</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[	SUPPLY CHAIN BUILDING BLOCKS (BB)]]></Text>
					<Font>
						<Name>Verdana</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Image>
					<Id>1296738068475</Id>
					<Name><![CDATA[start_button]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>331</X><Y>244</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<OnClickCode><![CDATA[if ( getState() == IDLE ) {
	savePath(excel_file_parameters);
	run();
}
getPresentation().setPresentable( getEngine().getRoot() );
]]></OnClickCode>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Width>298</Width>
					<Height>229</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageFile><![CDATA[StartGREEN.png]]></ImageFile>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1296738068477</Id>
					<Name><![CDATA[text4]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>484</X><Y>356</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>345.0</Rotation>
					<Color>-1</Color>
					<Text><![CDATA[Version  
 0.9]]></Text>
					<Font>
						<Name>Lucida Sans</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Image>
					<Id>1298057050517</Id>
					<Name><![CDATA[image]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>270</X><Y>200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Width>40</Width>
					<Height>40</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageFile><![CDATA[excel.png]]></ImageFile>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1298276894649</Id>
					<Name><![CDATA[text3]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>900</X><Y>470</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Prof. Dr. Dr. h. c.  Wolfgang Kersten
Department of Business Logistics and General Management
Hamburg University of Technology
www.logu.tu-harburg.de]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1298280406853</Id>
					<Name><![CDATA[text5]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>60</X><Y>500</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[MSc. Mayolo Lopez, MBA						
mayolo.lopez@tuhh.de									
									]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1298280786847</Id>
					<Name><![CDATA[text6]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>230</X><Y>500</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Dipl. -Kfm. Daniel Stengel 
daniel.stengel@tuhh.de									
								]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1298280834506</Id>
					<Name><![CDATA[text8]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>144</X><Y>475</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16744448</Color>
					<Text><![CDATA[Development Team 					]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>3</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1298281248734</Id>
					<Name><![CDATA[line]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>60</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<AsObject>true</AsObject>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Lock>false</Lock>
					<ShowIn3D>false</ShowIn3D>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>290</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
			</Shapes>
			<Controls>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1298053512491</Id>
					<Name><![CDATA[filename]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>320</X><Y>200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="300" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor>-657956</FillColor>
						<TextColor>-7650029</TextColor>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="2"/>
						<LinkTo>true</LinkTo>
						<Link>excel_file_parameters</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1298278220922</Id>
					<Name><![CDATA[button]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>630</X><Y>200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="120" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
						<TextColor/>
						<ActionCode><![CDATA[javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(".");
int returnVal = chooser.showOpenDialog( getPresentation().getPanel() );
if( returnVal == javax.swing.JFileChooser.APPROVE_OPTION ) {
	filename.setText( chooser.getSelectedFile().getName() );
	excel_file_parameters = chooser.getSelectedFile().getName();
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Browse xls file ....]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1299232144409</Id>
					<Name><![CDATA[cbDebug]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="160" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
						<TextColor/>
						<EnableExpression><![CDATA[true]]></EnableExpression>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Enable Debug Information]]></LabelText>
						<LinkTo>true</LinkTo>
						<Link>debugOn</Link>
	 				</ExtendedProperties>
				</Control>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1299232597873</Id>
					<Name><![CDATA[cbGui]]></Name>
					<ExcludeFromBuild>false</ExcludeFromBuild>
					<X>200</X><Y>300</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<BasicProperties Width="140" Height="30" 
				AsObject="true">
                        <EmbeddedIcon>false</EmbeddedIcon>				
						<FillColor/>
						<TextColor/>
						<EnableExpression><![CDATA[true]]></EnableExpression>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Enable User Interface]]></LabelText>
						<LinkTo>true</LinkTo>
						<Link>guiOn</Link>
	 				</ExtendedProperties>
				</Control>
			</Controls>
			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[parameter]]></ParameterName>
					<ParameterValue><![CDATA[]]></ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[excel_file_parameters]]></ParameterName>
					<ParameterValue><![CDATA[excel_file_parameters]]></ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[zoom_visualization]]></ParameterName>
					<ParameterValue><![CDATA[]]></ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[guiOn]]></ParameterName>
					<ParameterValue><![CDATA[guiOn]]></ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[debugOn]]></ParameterName>
					<ParameterValue><![CDATA[debugOn]]></ParameterValue>
				</Parameter>
			</Parameters>			
			<PresentationProperties 
				EnableAdaptiveFrameManagement="true" 
				EnableAntiAliasing="true"
				EnableEnhancedModelElementsAnimation="true"
				EnablePanning="true"
				EnableZoom="true">
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<CpuRatio><![CDATA[ratio_1_2]]></CpuRatio>	        
				<Title><![CDATA[BB : Simulation]]></Title>	
				<FramesPerSecond><![CDATA[20.0]]></FramesPerSecond>
				<RealTimeScale>1.0</RealTimeScale>
				<UIProperty Name="Experiment Progress" Value="false"/>
				<UIProperty Name="Simulation Progress" Value="true"/>
				<UIProperty Name="Statusbar Events Per Second" Value="false"/>
				<UIProperty Name="Statusbar Frames Per Second" Value="false"/>
				<UIProperty Name="Statusbar Memory" Value="true"/>
				<UIProperty Name="Statusbar Model Date" Value="false"/>
				<UIProperty Name="Statusbar Model Step" Value="false"/>
				<UIProperty Name="Statusbar Model Time" Value="true"/>
				<UIProperty Name="Statusbar Real Time Of Simulation" Value="false"/>
				<UIProperty Name="Statusbar Status" Value="true"/>
				<UIProperty Name="Toolbar Animation setup" Value="false"/>
				<UIProperty Name="Toolbar Execution control" Value="true"/>
				<UIProperty Name="Toolbar File" Value="false"/>
				<UIProperty Name="Toolbar Model navigation" Value="true"/>
				<UIProperty Name="Toolbar Time scale setup" Value="true"/>
				<UIProperty Name="Toolbar View" Value="false"/>
			</PresentationProperties>
			<ModelTimeProperties 
				UseCalendar="false">
				<StopOption><![CDATA[Stop at specified time]]></StopOption>
				<InitialDate><![CDATA[1291972726926]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1300612726926]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
		</SimulationExperiment>	
	</Experiments>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1291973178795</Id>
			<Name><![CDATA[Order]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Order
 */	
public class Order implements java.io.Serializable {

	 int orderID;
	 String productName;
	 double quantity;
	 String sender;
	 String recipient;
	 double time;
	

    /**
     * Default constructor
     */
    public Order(Generic_agent _myAgent){
    	this.orderID = _myAgent.get_Main().globalOrderID++;
		this.sender = _myAgent.Name;
		this.time = _myAgent.time();
    }
    public Order(Demand_Agent _myAgent){
    	this.orderID = _myAgent.get_Main().globalOrderID++;
		this.sender = _myAgent.Name;
		this.time = _myAgent.time();
    }

    /**
     * Constructor initializing the fields
     */     
    public Order(Generic_agent _myAgent, String productName, double quantity, String recipient){
    	this.orderID = _myAgent.get_Main().globalOrderID++;
		this.sender = _myAgent.Name;
		this.time = _myAgent.time();
    	this.productName = productName;
		this.quantity = quantity;
		this.recipient = recipient;
    }
	
	@Override
	public String toString() {
		return  
			"orderID = " + orderID +" " +
			"productName = " + productName + " " +
			"quantity = " + quantity + " " +
			"sender = " + sender + " " +
			"recipient = " + recipient + " ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 3L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1291975556637</Id>
			<Name><![CDATA[Status]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Status
 */	
public class Status implements java.io.Serializable {

	 int orderID;
	 
	 double quantity;
	
	 String status;
	
	 double recTime;
	

    /**
     * Default constructor
     */
    public Status(){
    }

    /**
     * Constructor initializing the fields
     */     
    public Status(int orderID, double quantity, String status, double recTime){
		this.orderID = orderID;
		this.quantity = quantity;
		this.status = status;
		this.recTime = recTime;
    }     
	
	@Override
	public String toString() {
		return  
			"orderID = " + orderID +" " +
			"quantity satisfied =" + quantity + " " +
	 		"status = " + status +" " +
			"recTime = " + recTime +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1292842192341</Id>
			<Name><![CDATA[StockItem]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * StockItem
 */	
public class StockItem implements java.io.Serializable {

	 String productName;
	
	 double quantity;
	
	 double time;
	 
	 String status;
	

    /**
     * Default constructor
     */
    public StockItem(){
    }

    /**
     * Constructor initializing the fields
     */     
    public StockItem(String productName, double quantity, double time, String status){
		this.productName = productName;
		this.quantity = quantity;
		this.time = time;
		this.status = status;
    }     
	
	@Override
	public String toString() {
		return  
			"productName = " + productName +" " +
			"quantity = " + quantity +" " +
			"time = " + time +" " +
			"status = " + status +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1292932884757</Id>
			<Name><![CDATA[Shipment]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Shipment
 */	
public class Shipment implements java.io.Serializable {
	
	String sender;
	 
	String productName;
	
	 int orderID;
	
	 double quantity;
	
	 double price;
	 
	 String destination;
	 
	 String transporter;

    /**
     * Конструктор по умолчанию
     */
    public Shipment(Generic_agent _myAgent){
    		this.sender = _myAgent.Name;
    	     }

    /**
     * Конструктор, инициализирующий поля
     */     
    public Shipment(Generic_agent _myAgent, String productName, int orderID, double quantity, double price, String destination, String transporter){
		this.sender = _myAgent.Name;
    	this.productName = productName;
		this.orderID = orderID;
		this.quantity = quantity;
		this.price = price;
		this.destination = destination;
		this.transporter = transporter;
    }     
	
	@Override
	public String toString() {
		return  
			"sender = " + sender+ " " +
			"nameofProduct = " + productName +" " +
			"orderID = " + orderID +" " +
			"Quantity = " + quantity +" " +
			"Price = " + price +" " +
			"destination = " + destination +" " +
			"transporter = " + transporter +" ";
	}

	/**
	 * Это число используется при сохранении состояния модели<br>
	 * Его рекомендуется изменить в случае изменения класса
	 */ 
	private static final long serialVersionUID = 2L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1295244567545</Id>
			<Name><![CDATA[Money]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Money
 */	
public class Money implements java.io.Serializable {

	 String Category;
	
	 String Item;
	
	 double Value;
	
	 double Time;
	

    /**
     * Default constructor
     */
    public Money(){
    }

    /**
     * Constructor initializing the fields
     */     
    public Money(String Category, String Item, double Value, double Time){
		this.Category = Category;
		this.Item = Item;
		this.Value = Value;
		this.Time = Time;
    }     
	
	@Override
	public String toString() {
		return  
			"Category = " + Category +" " +
			"Item = " + Item +" " +
			"Value = " + Value +" " +
			"Time = " + Time +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1296737914051</Id>
			<Name><![CDATA[Transaction_Rec]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Transaction_Rec
 */	
public class Transaction_Rec implements java.io.Serializable {

	 int orderID;
	
	 String product;
	
	 double quantity;
	
	 String type;
	
	 double time;
	

    /**
     * Default constructor
     */
    public Transaction_Rec(){
    }

    /**
     * Constructor initializing the fields
     */     
    public Transaction_Rec(int orderID, String product, double quantity, String type, double time){
		this.orderID = orderID;
		this.product = product;
		this.quantity = quantity;
		this.type = type;
		this.time = time;
    }     
	
	@Override
	public String toString() {
		return  
			"orderID = " + orderID +" " +
			"product = " + product +" " +
			"quantity = " + quantity +" " +
			"type = " + type +" " +
			"time = " + time +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1297090427681</Id>
			<Name><![CDATA[BOM]]></Name>
			<Description><![CDATA[//**Procees time per UNIT**//]]></Description> 
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * BOM1
 */	
public class BOM implements java.io.Serializable {

	
	 String productName;// name of product
	
	 String input;
	
	 double quantity;
	
    /**
     * Default constructor
     */
    public BOM(){
    }

    /**
     * Constructor initializing the fields
     */     
    public BOM(String productName, String input, double quantity){
		this.productName = productName;
		this.input = input;
		this.quantity = quantity;
		
	
    }     
	
	@Override
	public String toString() {
		return  
			"productName = " + productName +" " +
			"input = " + input +" " +
			"quantity = " + quantity +" " ;

	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1297090476479</Id>
			<Name><![CDATA[PriceL]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Price
 */	
public class PriceL implements java.io.Serializable {
	
	Generic_agent _myAgent;
	//String producer; 	 
	String name;	
	double price;	 
	String currency = " € " ;
	//double time= _myAgent.time();
	

    /**
     * Конструктор по умолчанию
     */
    public PriceL(){
    }
   
    /**
     * Конструктор, инициализирующий поля
     */     
    public PriceL(String name, double price){
    //	this.producer =_myAgent.Name;
    	this.name = name;
		this.price = price;
		this.currency = "€";
		//this.time = _myAgent.time();
    }     
	
	@Override
	public String toString() {
		return 
			//"Producer = " + producer +" "+
			"Name = " + name +" " +
			"Price = " + price +" "+
			"Currency = " + currency + " ";
			//"at Time = " + time + " ";
	}

	/**
	 * Это число используется при сохранении состояния модели<br>
	 * Его рекомендуется изменить в случае изменения класса
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1297090476494</Id>
			<Name><![CDATA[ProductionRate]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * ProductionRate
 */	
public class ProductionRate implements java.io.Serializable {

	 String output;
	
	 double rate = 1;
	

    /**
     * Default constructor
     */
    public ProductionRate(){
    }

    /**
     * Constructor initializing the fields
     */     
    public ProductionRate(String output, double rate){
		this.output = output;
		this.rate = rate;
    }     
	
	@Override
	public String toString() {
		return  
			"output = " + output +" " +
			"rate = " + rate +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1297090515547</Id>
			<Name><![CDATA[Ss_Policy]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Ss_Policie
 */	
public class Ss_Policy implements java.io.Serializable {

	 String productName;
	
	 double S;
	
	 double s;
	

    /**
     * Default constructor
     */
    public Ss_Policy(){
    }

    /**
     * Constructor initializing the fields
     */     
    public Ss_Policy(String productName, double S, double s){
		this.productName = productName;
		this.S = S;
		this.s = s;
    }     
	
	@Override
	public String toString() {
		return  
			"productName = " + productName +" " +
			"S_UpperLevel = " + S +" " +
			"s_LowerLevel = " + s +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1297853467118</Id>
			<Name><![CDATA[Quote]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Quote
 */	
public class Quote implements java.io.Serializable {

	String querier="";
	
	String product = "";
	
	 double price = -1;
	
	 double distance = -1;
	
	 double time = -1;
	 
	 double capacity = -1;
	
	 String quoter;
	

    /**
     * Default constructor
     */
    public Quote(String _myName){
    	this.querier =_myName;
    }

    /**
     * Constructor initializing the fields
     */     
    public Quote(String _myName, String product, double price, double distance, double time, double capacity, String quoter){
		this.querier = _myName;
		this.product = product;
		this.price = price;
		this.distance = distance;
		this.time = time;
		this.capacity = capacity;
		this.quoter = quoter;
    }     
	
	@Override
	public String toString() {
		return  
			"querier = " + querier +" " +
			"product = " + product +" " +
			"price = " + price +" " +
			"distance = " + distance +" " +
			"time = " + time + " " +
			"production capacity = " + capacity + " " +
			"quoter = " + quoter +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1305931875694</Id>
			<Name><![CDATA[Policy]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * Policy
 */	
public class Policy implements java.io.Serializable {

	 String product;
	
	 String policy;
	

    /**
     * Default constructor
     */
    public Policy(){
    }

    /**
     * Constructor initializing the fields
     */     
    public Policy(String product, String policy){
		this.product = product;
		this.policy = policy;
    }     
	
	@Override
	public String toString() {
		return  
			"product = " + product +" " +
			"policy = " + policy +" ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1310980280396</Id>
			<Name><![CDATA[DebugTrace]]></Name>
			<ExcludeFromBuild>false</ExcludeFromBuild>
			<Text><![CDATA[/**
 * author : Shafeyev Roman
 * static class DebugTrace: input debug information using TraceView object
 * 
 */	
public final  class DebugTrace implements java.io.Serializable {


    /**
     * Default constructor
     */
	public static Main main;
	
    public DebugTrace(){
    	
    }
    public static void SetMain(Main main){
    	DebugTrace.main = main;
    }
    
    public static void SetClassCheckBoxes(){
    	ArrayList<String> classNamesCollection = DebugTrace.GetClassNameCollection();
    	int x =50, y=0;
    	int i=0;
    	int w = 200;
    	int h = 20;
    	for (String caption : classNamesCollection)
    	{
    	    y = 50 + 40*i; 
    		main.traceView.AddCheckBox(x,y,w,h,caption+"_class");
    		i++;
    	}
    	
    	main.traceView.roundRectangle_class.setPos(20,20);
    	main.traceView.roundRectangle_class.setWidth(w+40);
    	main.traceView.roundRectangle_class.setHeight(y+40);
    } 
    public static void SetAgentObjectsCheckBoxes(){
    	int x =300, y=0;
    	int i=0;
    	int w = 200;
    	int h = 20;   	
    	for(Generic_agent agent : DebugTrace.main.agent)
    	{
    	    y = 50 + 40*i; 
    		main.traceView.AddCheckBox(x,y,w,h,agent.Name +"_agent");
    		i++;    		
    	}
    	
    	main.traceView.roundRectangle_obj.setPos(x-20,20);
    	main.traceView.roundRectangle_obj.setWidth(w+40);
    	main.traceView.roundRectangle_obj.setHeight(y+40);
    	
    }
 	public static ArrayList<String> GetClassNameCollection(){
		ArrayList<String>  clList = new  ArrayList<String>();
		
		clList.add("BalanceSheet");
    	clList.add("Delivery");
    	clList.add("Demand_Agent");
    	clList.add("Demand_Quontes");
    	clList.add("Demand_Quontes1");
    	clList.add("ExcelInterface");
    	clList.add("Generic_agent");
    	clList.add("IncOrdList");
    	clList.add("InventoryManagement");
    	
    	return clList;
	}
	public static boolean trace(Object obj, Object msg)	{
		return trace(obj,msg.toString());
	}
	public static boolean trace(Object obj, String msg)	{
		if(DebugTrace.main.debugOn==false)
			return false;
		if(main==null)
			return false;
		String className = obj.getClass().getName();
		
		int ind = obj.getClass().getPackage().getName().length();
		int count = className.length();
		className = className.substring(ind+1,count);
		if(DebugTrace.isShowClass(className))
		{
			if(className.equalsIgnoreCase(Generic_agent.class.getName())&&
			   !isShowAgentObject(obj))
					return false;
			//String s = main.traceView.editbox.getText();
			//main.traceView.editbox.setText(s + "\n"+ msg);
			traceln(msg+"\n");
			return true;
		}
		return false;
	}    
	
	public static boolean isShowAgentObject(Object agentObj) {
		Generic_agent agent = (Generic_agent)agentObj;
		String objName= agent.getName();
		for(Object obj : DebugTrace.main.traceView.presentation.getShapes())
		{
	  		if(!ShapeCheckBox.class.getName().equalsIgnoreCase(obj.getClass().getName()))
	    		continue;
	   		ShapeCheckBox box = (ShapeCheckBox) obj;
	   		String boxType = box.getText().substring(box.getText().length()-6,box.getText().length());
	   		String boxName = box.getText().substring(0,box.getText().length()-6);
	   		if(!boxType.equalsIgnoreCase("_agent"))
	   			continue;
	   		if(!boxName.equalsIgnoreCase(objName))
	   			continue;
	   			if(box.isSelected())
		  			return true;
	   			else
	   				return false;
		}
		return true;		
	}
	public static boolean isShowClass(String className)	{
		for(Object obj : DebugTrace.main.traceView.presentation.getShapes())
		{
	  		if(!ShapeCheckBox.class.getName().equalsIgnoreCase(obj.getClass().getName()))
	    		continue;
	  		ShapeCheckBox box = (ShapeCheckBox) obj;
	  		String boxType = box.getText().substring(box.getText().length()-6,box.getText().length());
	   		if(!boxType.equalsIgnoreCase("_class"))
	   			continue;
	   		String boxName = box.getText().substring(0,box.getText().length()-6);
	   		if(className.equalsIgnoreCase(boxName) && box.isSelected()==true)
	   		{
		  		return true;
		  	}
		}
		return false;
	}   
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
	</JavaClasses>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.xj.anylogic.libraries.enterprise]]></LibraryName>
		<VersionMajor>6</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>3</VersionBuild>
    </RequiredLibraryReference>
	<ClassPathEntry>
		<Location><![CDATA[jxl.jar]]></Location>
		<Imported>true</Imported>
		<Folder>false</Folder>
	</ClassPathEntry>
</Model>
</AnyLogicWorkspace>